{"metadata":"{\"defaultCompiler\":{\"version\":\"0.7.3\"},\"sources\":{\"contracts/payloads/IGP29/PayloadIGP29.sol\":{\"content\":\"pragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IGovernorBravo {\\n    function _acceptAdmin() external;\\n\\n    function _setVotingDelay(uint newVotingDelay) external;\\n\\n    function _setVotingPeriod(uint newVotingPeriod) external;\\n\\n    function _acceptAdminOnTimelock() external;\\n\\n    function _setImplementation(address implementation_) external;\\n\\n    function propose(\\n        address[] memory targets,\\n        uint[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) external returns (uint);\\n\\n    function admin() external view returns (address);\\n\\n    function pendingAdmin() external view returns (address);\\n\\n    function timelock() external view returns (address);\\n\\n    function votingDelay() external view returns (uint256);\\n\\n    function votingPeriod() external view returns (uint256);\\n}\\n\\ninterface ITimelock {\\n    function acceptAdmin() external;\\n\\n    function setDelay(uint delay_) external;\\n\\n    function setPendingAdmin(address pendingAdmin_) external;\\n\\n    function queueTransaction(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta\\n    ) external returns (bytes32);\\n\\n    function executeTransaction(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta\\n    ) external payable returns (bytes memory);\\n\\n    function pendingAdmin() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function delay() external view returns (uint256);\\n}\\n\\ninterface AdminModuleStructs {\\n    struct AddressBool {\\n        address addr;\\n        bool value;\\n    }\\n\\n    struct AddressUint256 {\\n        address addr;\\n        uint256 value;\\n    }\\n\\n    struct RateDataV1Params {\\n        address token;\\n        uint256 kink;\\n        uint256 rateAtUtilizationZero;\\n        uint256 rateAtUtilizationKink;\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    struct RateDataV2Params {\\n        address token;\\n        uint256 kink1;\\n        uint256 kink2;\\n        uint256 rateAtUtilizationZero;\\n        uint256 rateAtUtilizationKink1;\\n        uint256 rateAtUtilizationKink2;\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    struct TokenConfig {\\n        address token;\\n        uint256 fee;\\n        uint256 threshold;\\n        uint256 maxUtilization;\\n    }\\n\\n    struct UserSupplyConfig {\\n        address user;\\n        address token;\\n        uint8 mode;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseWithdrawalLimit;\\n    }\\n\\n    struct UserBorrowConfig {\\n        address user;\\n        address token;\\n        uint8 mode;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseDebtCeiling;\\n        uint256 maxDebtCeiling;\\n    }\\n}\\n\\ninterface IProxy {\\n    function setAdmin(address newAdmin_) external;\\n\\n    function setDummyImplementation(address newDummyImplementation_) external;\\n\\n    function addImplementation(\\n        address implementation_,\\n        bytes4[] calldata sigs_\\n    ) external;\\n\\n    function removeImplementation(address implementation_) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function getDummyImplementation() external view returns (address);\\n\\n    function getImplementationSigs(\\n        address impl_\\n    ) external view returns (bytes4[] memory);\\n\\n    function getSigsImplementation(bytes4 sig_) external view returns (address);\\n\\n    function readFromStorage(\\n        bytes32 slot_\\n    ) external view returns (uint256 result_);\\n}\\n\\ninterface IFluidLiquidityAdmin {\\n    /// @notice adds/removes auths. Auths generally could be contracts which can have restricted actions defined on contract.\\n    ///         auths can be helpful in reducing governance overhead where it's not needed.\\n    /// @param authsStatus_ array of structs setting allowed status for an address.\\n    ///                     status true => add auth, false => remove auth\\n    function updateAuths(\\n        AdminModuleStructs.AddressBool[] calldata authsStatus_\\n    ) external;\\n\\n    /// @notice adds/removes guardians. Only callable by Governance.\\n    /// @param guardiansStatus_ array of structs setting allowed status for an address.\\n    ///                         status true => add guardian, false => remove guardian\\n    function updateGuardians(\\n        AdminModuleStructs.AddressBool[] calldata guardiansStatus_\\n    ) external;\\n\\n    /// @notice changes the revenue collector address (contract that is sent revenue). Only callable by Governance.\\n    /// @param revenueCollector_  new revenue collector address\\n    function updateRevenueCollector(address revenueCollector_) external;\\n\\n    /// @notice changes current status, e.g. for pausing or unpausing all user operations. Only callable by Auths.\\n    /// @param newStatus_ new status\\n    ///        status = 2 -> pause, status = 1 -> resume.\\n    function changeStatus(uint256 newStatus_) external;\\n\\n    /// @notice                  update tokens rate data version 1. Only callable by Auths.\\n    /// @param tokensRateData_   array of RateDataV1Params with rate data to set for each token\\n    function updateRateDataV1s(\\n        AdminModuleStructs.RateDataV1Params[] calldata tokensRateData_\\n    ) external;\\n\\n    /// @notice                  update tokens rate data version 2. Only callable by Auths.\\n    /// @param tokensRateData_   array of RateDataV2Params with rate data to set for each token\\n    function updateRateDataV2s(\\n        AdminModuleStructs.RateDataV2Params[] calldata tokensRateData_\\n    ) external;\\n\\n    /// @notice updates token configs: fee charge on borrowers interest & storage update utilization threshold.\\n    ///         Only callable by Auths.\\n    /// @param tokenConfigs_ contains token address, fee & utilization threshold\\n    function updateTokenConfigs(\\n        AdminModuleStructs.TokenConfig[] calldata tokenConfigs_\\n    ) external;\\n\\n    /// @notice updates user classes: 0 is for new protocols, 1 is for established protocols.\\n    ///         Only callable by Auths.\\n    /// @param userClasses_ struct array of uint256 value to assign for each user address\\n    function updateUserClasses(\\n        AdminModuleStructs.AddressUint256[] calldata userClasses_\\n    ) external;\\n\\n    /// @notice sets user supply configs per token basis. Eg: with interest or interest-free and automated limits.\\n    ///         Only callable by Auths.\\n    /// @param userSupplyConfigs_ struct array containing user supply config, see `UserSupplyConfig` struct for more info\\n    function updateUserSupplyConfigs(\\n        AdminModuleStructs.UserSupplyConfig[] memory userSupplyConfigs_\\n    ) external;\\n\\n    /// @notice setting user borrow configs per token basis. Eg: with interest or interest-free and automated limits.\\n    ///         Only callable by Auths.\\n    /// @param userBorrowConfigs_ struct array containing user borrow config, see `UserBorrowConfig` struct for more info\\n    function updateUserBorrowConfigs(\\n        AdminModuleStructs.UserBorrowConfig[] memory userBorrowConfigs_\\n    ) external;\\n\\n    /// @notice pause operations for a particular user in class 0 (class 1 users can't be paused by guardians).\\n    /// Only callable by Guardians.\\n    /// @param user_          address of user to pause operations for\\n    /// @param supplyTokens_  token addresses to pause withdrawals for\\n    /// @param borrowTokens_  token addresses to pause borrowings for\\n    function pauseUser(\\n        address user_,\\n        address[] calldata supplyTokens_,\\n        address[] calldata borrowTokens_\\n    ) external;\\n\\n    /// @notice unpause operations for a particular user in class 0 (class 1 users can't be paused by guardians).\\n    /// Only callable by Guardians.\\n    /// @param user_          address of user to unpause operations for\\n    /// @param supplyTokens_  token addresses to unpause withdrawals for\\n    /// @param borrowTokens_  token addresses to unpause borrowings for\\n    function unpauseUser(\\n        address user_,\\n        address[] calldata supplyTokens_,\\n        address[] calldata borrowTokens_\\n    ) external;\\n\\n    /// @notice         collects revenue for tokens to configured revenueCollector address.\\n    /// @param tokens_  array of tokens to collect revenue for\\n    /// @dev            Note that this can revert if token balance is < revenueAmount (utilization > 100%)\\n    function collectRevenue(address[] calldata tokens_) external;\\n\\n    /// @notice gets the current updated exchange prices for n tokens and updates all prices, rates related data in storage.\\n    /// @param tokens_ tokens to update exchange prices for\\n    /// @return supplyExchangePrices_ new supply rates of overall system for each token\\n    /// @return borrowExchangePrices_ new borrow rates of overall system for each token\\n    function updateExchangePrices(\\n        address[] calldata tokens_\\n    )\\n        external\\n        returns (\\n            uint256[] memory supplyExchangePrices_,\\n            uint256[] memory borrowExchangePrices_\\n        );\\n}\\n\\ninterface IFluidVaultT1 {\\n    /// @notice updates the Vault oracle to `newOracle_`. Must implement the FluidOracle interface.\\n    function updateOracle(address newOracle_) external;\\n\\n    /// @notice updates the all Vault core settings according to input params.\\n    /// All input values are expected in 1e2 (1% = 100, 100% = 10_000).\\n    function updateCoreSettings(\\n        uint256 supplyRateMagnifier_,\\n        uint256 borrowRateMagnifier_,\\n        uint256 collateralFactor_,\\n        uint256 liquidationThreshold_,\\n        uint256 liquidationMaxLimit_,\\n        uint256 withdrawGap_,\\n        uint256 liquidationPenalty_,\\n        uint256 borrowFee_\\n    ) external;\\n\\n    /// @notice updates the allowed rebalancer to `newRebalancer_`.\\n    function updateRebalancer(address newRebalancer_) external;\\n\\n    /// @notice updates the supply rate magnifier to `supplyRateMagnifier_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateSupplyRateMagnifier(uint supplyRateMagnifier_) external;\\n\\n    /// @notice updates the collateral factor to `collateralFactor_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateCollateralFactor(uint collateralFactor_) external;\\n}\\n\\ninterface IFluidVaultT1Factory {\\n    function deployVault(\\n        address vaultDeploymentLogic_,\\n        bytes calldata vaultDeploymentData_\\n    ) external returns (address vault_);\\n\\n    function setVaultAuth(\\n        address vault_,\\n        address vaultAuth_,\\n        bool allowed_\\n    ) external;\\n}\\n\\ninterface IFluidVaultT1DeploymentLogic {\\n    function vaultT1(address supplyToken_, address borrowToken_) external;\\n}\\n\\ncontract PayloadIGP29 {\\n    uint256 public constant PROPOSAL_ID = 29;\\n\\n    address public constant PROPOSER =\\n        0xA45f7bD6A5Ff45D31aaCE6bCD3d426D9328cea01;\\n\\n    address public constant PROPOSER_AVO_MULTISIG =\\n        0x059A94A72951c0ae1cc1CE3BF0dB52421bbE8210;\\n\\n    address public constant PROPOSER_AVO_MULTISIG_2 =\\n        0x9efdE135CA4832AbF0408c44c6f5f370eB0f35e8;\\n\\n    IGovernorBravo public constant GOVERNOR =\\n        IGovernorBravo(0x0204Cd037B2ec03605CFdFe482D8e257C765fA1B);\\n    ITimelock public immutable TIMELOCK =\\n        ITimelock(0x2386DC45AdDed673317eF068992F19421B481F4c);\\n\\n    address public immutable ADDRESS_THIS;\\n\\n    address public constant TEAM_MULTISIG =\\n        0x4F6F977aCDD1177DCD81aB83074855EcB9C2D49e;\\n\\n    IFluidLiquidityAdmin public constant LIQUIDITY =\\n        IFluidLiquidityAdmin(0x52Aa899454998Be5b000Ad077a46Bbe360F4e497);\\n    IFluidVaultT1Factory public constant VAULT_T1_FACTORY =\\n        IFluidVaultT1Factory(0x324c5Dc1fC42c7a4D43d92df1eBA58a54d13Bf2d);\\n    IFluidVaultT1DeploymentLogic public constant VAULT_T1_DEPLOYMENT_LOGIC =\\n        IFluidVaultT1DeploymentLogic(\\n            0x2Cc710218F2e3a82CcC77Cc4B3B93Ee6Ba9451CD\\n        );\\n\\n    address public constant ETH_ADDRESS =\\n        0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n    address public constant wstETH_ADDRESS =\\n        0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0;\\n    address public constant weETH_ADDRESS =\\n        0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee;\\n\\n    address public constant PT_sUSDe_ADDRESS =\\n        0x6c9f097e044506712B58EAC670c9a5fd4BCceF13;\\n\\n    address public constant sUSDe_ADDRESS =\\n        0x9D39A5DE30e57443BfF2A8307A4256c8797A3497;\\n    address public constant USDC_ADDRESS =\\n        0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\\n    address public constant USDT_ADDRESS =\\n        0xdAC17F958D2ee523a2206206994597C13D831ec7;\\n\\n    constructor() {\\n        ADDRESS_THIS = address(this);\\n    }\\n\\n    function propose(string memory description) external {\\n        require(\\n            msg.sender == PROPOSER ||\\n                msg.sender == TEAM_MULTISIG ||\\n                address(this) == PROPOSER_AVO_MULTISIG ||\\n                address(this) == PROPOSER_AVO_MULTISIG_2,\\n            \\\"msg.sender-not-allowed\\\"\\n        );\\n\\n        uint256 totalActions = 1;\\n        address[] memory targets = new address[](totalActions);\\n        uint256[] memory values = new uint256[](totalActions);\\n        string[] memory signatures = new string[](totalActions);\\n        bytes[] memory calldatas = new bytes[](totalActions);\\n\\n        // Action 1: call executePayload on timelock contract to execute payload related to Fluid\\n        targets[0] = address(TIMELOCK);\\n        values[0] = 0;\\n        signatures[0] = \\\"executePayload(address,string,bytes)\\\";\\n        calldatas[0] = abi.encode(ADDRESS_THIS, \\\"execute()\\\", abi.encode());\\n\\n        uint256 proposedId = GOVERNOR.propose(\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            description\\n        );\\n\\n        require(proposedId == PROPOSAL_ID, \\\"PROPOSAL_IS_NOT_SAME\\\");\\n    }\\n\\n    function execute() external {\\n        require(address(this) == address(TIMELOCK), \\\"not-valid-caller\\\");\\n\\n        /// Action 1: Set PT_sUSDe token config and market rate curve on liquidity.\\n        action1();\\n\\n       /// Action 2: Update PT_sUSDe/USDC and PT_sUSDe/USDT vaults.\\n       action2();\\n\\n    }\\n\\n    function verifyProposal() external view {}\\n\\n    /***********************************|\\n    |     Proposal Payload Actions      |\\n    |__________________________________*/\\n\\n    /// @notice Action 1: Set PT_sUSDe token config and market rate curve on liquidity.\\n    function action1() internal {\\n        {\\n            AdminModuleStructs.RateDataV2Params[]\\n                memory params_ = new AdminModuleStructs.RateDataV2Params[](1);\\n\\n            params_[0] = AdminModuleStructs.RateDataV2Params({\\n                token: PT_sUSDe_ADDRESS, // PT_sUSDe\\n                kink1: 50 * 1e2, // 50%\\n                kink2: 80 * 1e2, // 80%\\n                rateAtUtilizationZero: 0, // 0%\\n                rateAtUtilizationKink1: 20 * 1e2, // 20%\\n                rateAtUtilizationKink2: 40 * 1e2, // 40%\\n                rateAtUtilizationMax: 100 * 1e2 // 100%\\n            });\\n\\n            LIQUIDITY.updateRateDataV2s(params_);\\n        }\\n\\n        {\\n            AdminModuleStructs.TokenConfig[]\\n                memory params_ = new AdminModuleStructs.TokenConfig[](1);\\n\\n            params_[0] = AdminModuleStructs.TokenConfig({\\n                token: PT_sUSDe_ADDRESS, // PT_sUSDe\\n                threshold: 0.3 * 1e2, // 0.3\\n                fee: 10 * 1e2, // 10%\\n                maxUtilization: 0\\n            });\\n\\n            LIQUIDITY.updateTokenConfigs(params_);\\n        }\\n\\n    }\\n\\n    /// @notice Action 2: Update PT_sUSDe/USDC and PT_sUSDe/USDT vaults.\\n    function action2() internal {\\n        // Deploy PT_sUSDe/USDC vault.\\n        deploy_PT_sUSDe_VAULT(USDC_ADDRESS);\\n\\n        // Deploy PT_sUSDe/USDT vault.\\n        deploy_PT_sUSDe_VAULT(USDT_ADDRESS);\\n    }\\n\\n    /***********************************|\\n    |     Proposal Payload Helpers      |\\n    |__________________________________*/\\n\\n    function deploy_PT_sUSDe_VAULT(address debtToken) internal {\\n        // Deploy PT_sUSDe based vault.\\n        address vault_ = VAULT_T1_FACTORY.deployVault(\\n            address(VAULT_T1_DEPLOYMENT_LOGIC),\\n            abi.encodeWithSelector(\\n                IFluidVaultT1DeploymentLogic.vaultT1.selector,\\n                PT_sUSDe_ADDRESS, // PT_sUSDe,\\n                debtToken // USDC or USDT\\n            )\\n        );\\n\\n        // Set user supply config for the vault on Liquidity Layer.\\n        {\\n            AdminModuleStructs.UserSupplyConfig[]\\n                memory configs_ = new AdminModuleStructs.UserSupplyConfig[](1);\\n\\n            configs_[0] = AdminModuleStructs.UserSupplyConfig({\\n                user: address(vault_),\\n                token: PT_sUSDe_ADDRESS,\\n                mode: 1,\\n                expandPercent: 25 * 1e2, // 25%\\n                expandDuration: 12 hours,\\n                baseWithdrawalLimit: 5_000_000 * 1e18 // 5M PT_sUSDe\\n            });\\n\\n            LIQUIDITY.updateUserSupplyConfigs(configs_);\\n        }\\n\\n        // Set user borrow config for the vault on Liquidity Layer.\\n        {\\n            AdminModuleStructs.UserBorrowConfig[]\\n                memory configs_ = new AdminModuleStructs.UserBorrowConfig[](1);\\n\\n            configs_[0] = AdminModuleStructs.UserBorrowConfig({\\n                user: address(vault_),\\n                token: debtToken,\\n                mode: 1,\\n                expandPercent: 20 * 1e2, // 20%\\n                expandDuration: 12 hours,\\n                baseDebtCeiling: 7_125_000 * 1e6, // ~7.125M\\n                maxDebtCeiling: 9_500_000 * 1e6  // 9.5M\\n            });\\n\\n            LIQUIDITY.updateUserBorrowConfigs(configs_);\\n        }\\n\\n        // Update core settings on vault.\\n        {\\n            IFluidVaultT1(vault_).updateCoreSettings(\\n                100 * 1e2, // 1x     supplyRateMagnifier\\n                200 * 1e2, // 2x     borrowRateMagnifier\\n                88 * 1e2, // 88%     collateralFactor\\n                90 * 1e2, // 90%     liquidationThreshold\\n                94 * 1e2, // 94%     liquidationMaxLimit\\n                2 * 1e2, //  2%      withdrawGap\\n                4 * 1e2, //  4%      liquidationPenalty\\n                0 //         0%      borrowFee\\n            );\\n        }\\n\\n        // Update oracle on vault.\\n        {\\n            IFluidVaultT1(vault_).updateOracle(\\n                0x58455665979fdf24c3Ea8674323326bD99237e12\\n            );\\n        }\\n\\n        // Update rebalancer on vault.\\n        {\\n            IFluidVaultT1(vault_).updateRebalancer(\\n                0x264786EF916af64a1DB19F513F24a3681734ce92\\n            );\\n        }\\n    }\\n}\\n\",\"versionPragma\":\"^0.7.0\"}}}","address":"0xBA91C0E3224e4Ad5447D1b521229Df6086967A91","bytecode":"0x60c06040527f2386dc45added673317ef068992f19421b481f4c00000000000000000000000060805234801561003457600080fd5b5030606081811b60a052608051901c906115ef610070600039806105a7528061072e52508061026c52806102de52806104f852506115ef6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063a4485598116100b8578063bb09d9b71161007c578063bb09d9b7146101e4578063bffa7f0f146101ec578063c1892058146101f4578063cc025f7c146101fc578063d38bca1d14610204578063dca95fbf1461020c57610137565b8063a4485598146101b1578063a734f06e146101b9578063aa98df39146101c1578063aaff0493146101d4578063b788f3a1146101dc57610137565b806366760d7d116100ff57806366760d7d146101895780636dc0ae22146101915780637aadef8b146101995780637e2f35fa146101a15780638a1c7364146101a957610137565b80630bc9136e1461013c57806325ad7f4d1461015a5780632861c7d11461016f578063474585e214610177578063614619541461017f575b600080fd5b610144610214565b604051610151919061158c565b60405180910390f35b610162610219565b60405161015191906111ab565b610162610231565b610162610249565b610187610261565b005b6101876102c2565b6101626102c4565b6101626102dc565b610162610300565b610162610318565b610162610330565b610162610348565b6101876101cf366004610fda565b610360565b6101626106b4565b6101626106cc565b6101626106e4565b6101626106fc565b610162610714565b61016261072c565b610162610750565b610162610768565b601d81565b739efde135ca4832abf0408c44c6f5f370eb0f35e881565b7352aa899454998be5b000ad077a46bbe360f4e49781565b732cc710218f2e3a82ccc77cc4b3b93ee6ba9451cd81565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102b25760405162461bcd60e51b81526004016102a990611562565b60405180910390fd5b6102ba610780565b6102c26109ae565b565b730204cd037b2ec03605cfdfe482d8e257c765fa1b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b73059a94a72951c0ae1cc1ce3bf0db52421bbe821081565b73324c5dc1fc42c7a4d43d92df1eba58a54d13bf2d81565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca081565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b3373a45f7bd6a5ff45d31aace6bcd3d426d9328cea011480610395575033734f6f977acdd1177dcd81ab83074855ecb9c2d49e145b806103b357503073059a94a72951c0ae1cc1ce3bf0db52421bbe8210145b806103d1575030739efde135ca4832abf0408c44c6f5f370eb0f35e8145b6103ed5760405162461bcd60e51b81526004016102a990611504565b604080516001808252818301909252606090826020808301908036833701905050905060608267ffffffffffffffff8111801561042957600080fd5b50604051908082528060200260200182016040528015610453578160200160208202803683370190505b50905060608367ffffffffffffffff8111801561046f57600080fd5b506040519080825280602002602001820160405280156104a357816020015b606081526020019060019003908161048e5790505b50905060608467ffffffffffffffff811180156104bf57600080fd5b506040519080825280602002602001820160405280156104f357816020015b60608152602001906001900390816104de5790505b5090507f00000000000000000000000000000000000000000000000000000000000000008460008151811061052457fe5b60200260200101906001600160a01b031690816001600160a01b03168152505060008360008151811061055357fe5b602002602001018181525050604051806060016040528060248152602001611596602491398260008151811061058557fe5b602090810291909101810191909152604080516000815291820181526105ce917f0000000000000000000000000000000000000000000000000000000000000000918101611205565b604051602081830303815290604052816000815181106105ea57fe5b6020908102919091010152604051636d4ab48d60e11b8152600090730204cd037b2ec03605cfdfe482d8e257c765fa1b9063da95691a906106379088908890889088908e90600401611246565b602060405180830381600087803b15801561065157600080fd5b505af1158015610665573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610689919061106f565b9050601d81146106ab5760405162461bcd60e51b81526004016102a990611534565b50505050505050565b73cd5fe23c85820f7b72d0926fc9b05b43e359b7ee81565b734f6f977acdd1177dcd81ab83074855ecb9c2d49e81565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b73a45f7bd6a5ff45d31aace6bcd3d426d9328cea0181565b73dac17f958d2ee523a2206206994597c13d831ec781565b7f000000000000000000000000000000000000000000000000000000000000000081565b736c9f097e044506712b58eac670c9a5fd4bccef1381565b739d39a5de30e57443bff2a8307a4256c8797a349781565b604080516001808252818301909252606091816020015b61079f610e98565b8152602001906001900390816107975790505090506040518060e00160405280736c9f097e044506712b58eac670c9a5fd4bccef136001600160a01b031681526020016113888152602001611f408152602001600081526020016107d08152602001610fa081526020016127108152508160008151811061081c57fe5b6020908102919091010152604051639dde597760e01b81527352aa899454998be5b000ad077a46bbe360f4e49790639dde59779061085e9084906004016112e5565b600060405180830381600087803b15801561087857600080fd5b505af115801561088c573d6000803e3d6000fd5b50505050506060600167ffffffffffffffff811180156108ab57600080fd5b506040519080825280602002602001820160405280156108e557816020015b6108d2610ede565b8152602001906001900390816108ca5790505b5090506040518060800160405280736c9f097e044506712b58eac670c9a5fd4bccef136001600160a01b031681526020016103e88152602001601e815260200160008152508160008151811061093757fe5b6020908102919091010152604051633fbdb00160e11b81527352aa899454998be5b000ad077a46bbe360f4e49790637f7b600290610979908490600401611370565b600060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b5050505050565b6109cb73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486109e4565b6102c273dac17f958d2ee523a2206206994597c13d831ec75b600073324c5dc1fc42c7a4d43d92df1eba58a54d13bf2d6001600160a01b031663968cbade732cc710218f2e3a82ccc77cc4b3b93ee6ba9451cd63f9f872f560e01b736c9f097e044506712b58eac670c9a5fd4bccef1386604051602401610a4d9291906111bf565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252610a9392916004016111d9565b602060405180830381600087803b158015610aad57600080fd5b505af1158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190610fac565b60408051600180825281830190925291925060609190816020015b610b08610f0f565b815260200190600190039081610b005790505090506040518060c00160405280836001600160a01b03168152602001736c9f097e044506712b58eac670c9a5fd4bccef136001600160a01b03168152602001600160ff1681526020016109c4815260200161a8c081526020016a0422ca8b0a00a42500000081525081600081518110610b9057fe5b60209081029190910101526040516301635db560e11b81527352aa899454998be5b000ad077a46bbe360f4e497906302c6bb6a90610bd2908490600401611454565b600060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b50505050506060600167ffffffffffffffff81118015610c1f57600080fd5b50604051908082528060200260200182016040528015610c5957816020015b610c46610f5a565b815260200190600190039081610c3e5790505b5090506040518060e00160405280836001600160a01b03168152602001846001600160a01b03168152602001600160ff1681526020016107d0815260200161a8c0815260200165067aeb18120081526020016508a3e420180081525081600081518110610cc257fe5b602090810291909101015260405162dc47c360e11b81527352aa899454998be5b000ad077a46bbe360f4e497906301b88f8690610d039084906004016113d0565b600060405180830381600087803b158015610d1d57600080fd5b505af1158015610d31573d6000803e3d6000fd5b50506040516354b04ef560e01b81526001600160a01b03851693506354b04ef59250610d7e915061271090614e209061226090612328906124b89060c890610190906000906004016114ce565b600060405180830381600087803b158015610d9857600080fd5b505af1158015610dac573d6000803e3d6000fd5b505060405163072d137f60e21b81526001600160a01b0384169250631cb44dfc9150610df0907358455665979fdf24c3ea8674323326bd99237e12906004016111ab565b600060405180830381600087803b158015610e0a57600080fd5b505af1158015610e1e573d6000803e3d6000fd5b505060405163b046a44960e01b81526001600160a01b038416925063b046a4499150610e629073264786ef916af64a1db19f513f24a3681734ce92906004016111ab565b600060405180830381600087803b158015610e7c57600080fd5b505af1158015610e90573d6000803e3d6000fd5b505050505050565b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600060ff1681526020016000815260200160008152602001600081525090565b6040518060e0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600060ff168152602001600081526020016000815260200160008152602001600081525090565b600060208284031215610fbd578081fd5b81516001600160a01b0381168114610fd3578182fd5b9392505050565b60006020808385031215610fec578182fd5b823567ffffffffffffffff80821115611003578384fd5b818501915085601f830112611016578384fd5b81358181111561102257fe5b604051601f8201601f191681018501838111828210171561103f57fe5b6040528181528382018501881015611055578586fd5b818585018683013790810190930193909352509392505050565b600060208284031215611080578081fd5b5051919050565b60008282518085526020808601955080818302840101818601855b848110156110d057601f198684030189526110be838351611160565b988401989250908301906001016110a2565b5090979650505050505050565b60008282518085526020808601955080818302840101818601855b848110156110d057601f19868403018952611114838351611160565b988401989250908301906001016110f8565b6000815180845260208085019450808401835b8381101561115557815187529582019590820190600101611139565b509495945050505050565b60008151808452815b8181101561118557602081850181015186830182015201611169565b818111156111965782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03831681526040602082018190526000906111fd90830184611160565b949350505050565b600060018060a01b038416825260606020830152600960608301526865786563757465282960b81b608083015260a060408301526111fd60a0830184611160565b60a0808252865190820181905260009060209060c0840190828a01845b828110156112885781516001600160a01b031684529284019290840190600101611263565b5050508381038285015261129c8189611126565b91505082810360408401526112b181876110dd565b905082810360608401526112c58186611087565b905082810360808401526112d98185611160565b98975050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561136357815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e09093019290850190600101611302565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561136357815180516001600160a01b0316855286810151878601528581015186860152606090810151908501526080909301929085019060010161138d565b602080825282518282018190526000919060409081850190868401855b8281101561136357815180516001600160a01b0390811686528782015116878601528581015160ff1686860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e090930192908501906001016113ed565b602080825282518282018190526000919060409081850190868401855b8281101561136357815180516001600160a01b0390811686528782015116878601528581015160ff1686860152606080820151908601526080808201519086015260a0908101519085015260c09093019290850190600101611471565b978852602088019690965260408701949094526060860192909252608085015260a084015260c083015260e08201526101000190565b6020808252601690820152751b5cd9cb9cd95b99195c8b5b9bdd0b585b1b1bddd95960521b604082015260600190565b60208082526014908201527350524f504f53414c5f49535f4e4f545f53414d4560601b604082015260600190565b60208082526010908201526f3737ba16bb30b634b216b1b0b63632b960811b604082015260600190565b9081526020019056fe657865637574655061796c6f616428616464726573732c737472696e672c627974657329a26469706673582212201706c7e1c2ddf32308c86f3c5e046d207428fa4f7e93e8cafcc1a29bca40803e64736f6c63430007030033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101375760003560e01c8063a4485598116100b8578063bb09d9b71161007c578063bb09d9b7146101e4578063bffa7f0f146101ec578063c1892058146101f4578063cc025f7c146101fc578063d38bca1d14610204578063dca95fbf1461020c57610137565b8063a4485598146101b1578063a734f06e146101b9578063aa98df39146101c1578063aaff0493146101d4578063b788f3a1146101dc57610137565b806366760d7d116100ff57806366760d7d146101895780636dc0ae22146101915780637aadef8b146101995780637e2f35fa146101a15780638a1c7364146101a957610137565b80630bc9136e1461013c57806325ad7f4d1461015a5780632861c7d11461016f578063474585e214610177578063614619541461017f575b600080fd5b610144610214565b604051610151919061158c565b60405180910390f35b610162610219565b60405161015191906111ab565b610162610231565b610162610249565b610187610261565b005b6101876102c2565b6101626102c4565b6101626102dc565b610162610300565b610162610318565b610162610330565b610162610348565b6101876101cf366004610fda565b610360565b6101626106b4565b6101626106cc565b6101626106e4565b6101626106fc565b610162610714565b61016261072c565b610162610750565b610162610768565b601d81565b739efde135ca4832abf0408c44c6f5f370eb0f35e881565b7352aa899454998be5b000ad077a46bbe360f4e49781565b732cc710218f2e3a82ccc77cc4b3b93ee6ba9451cd81565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102b25760405162461bcd60e51b81526004016102a990611562565b60405180910390fd5b6102ba610780565b6102c26109ae565b565b730204cd037b2ec03605cfdfe482d8e257c765fa1b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b73059a94a72951c0ae1cc1ce3bf0db52421bbe821081565b73324c5dc1fc42c7a4d43d92df1eba58a54d13bf2d81565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca081565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b3373a45f7bd6a5ff45d31aace6bcd3d426d9328cea011480610395575033734f6f977acdd1177dcd81ab83074855ecb9c2d49e145b806103b357503073059a94a72951c0ae1cc1ce3bf0db52421bbe8210145b806103d1575030739efde135ca4832abf0408c44c6f5f370eb0f35e8145b6103ed5760405162461bcd60e51b81526004016102a990611504565b604080516001808252818301909252606090826020808301908036833701905050905060608267ffffffffffffffff8111801561042957600080fd5b50604051908082528060200260200182016040528015610453578160200160208202803683370190505b50905060608367ffffffffffffffff8111801561046f57600080fd5b506040519080825280602002602001820160405280156104a357816020015b606081526020019060019003908161048e5790505b50905060608467ffffffffffffffff811180156104bf57600080fd5b506040519080825280602002602001820160405280156104f357816020015b60608152602001906001900390816104de5790505b5090507f00000000000000000000000000000000000000000000000000000000000000008460008151811061052457fe5b60200260200101906001600160a01b031690816001600160a01b03168152505060008360008151811061055357fe5b602002602001018181525050604051806060016040528060248152602001611596602491398260008151811061058557fe5b602090810291909101810191909152604080516000815291820181526105ce917f0000000000000000000000000000000000000000000000000000000000000000918101611205565b604051602081830303815290604052816000815181106105ea57fe5b6020908102919091010152604051636d4ab48d60e11b8152600090730204cd037b2ec03605cfdfe482d8e257c765fa1b9063da95691a906106379088908890889088908e90600401611246565b602060405180830381600087803b15801561065157600080fd5b505af1158015610665573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610689919061106f565b9050601d81146106ab5760405162461bcd60e51b81526004016102a990611534565b50505050505050565b73cd5fe23c85820f7b72d0926fc9b05b43e359b7ee81565b734f6f977acdd1177dcd81ab83074855ecb9c2d49e81565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b73a45f7bd6a5ff45d31aace6bcd3d426d9328cea0181565b73dac17f958d2ee523a2206206994597c13d831ec781565b7f000000000000000000000000000000000000000000000000000000000000000081565b736c9f097e044506712b58eac670c9a5fd4bccef1381565b739d39a5de30e57443bff2a8307a4256c8797a349781565b604080516001808252818301909252606091816020015b61079f610e98565b8152602001906001900390816107975790505090506040518060e00160405280736c9f097e044506712b58eac670c9a5fd4bccef136001600160a01b031681526020016113888152602001611f408152602001600081526020016107d08152602001610fa081526020016127108152508160008151811061081c57fe5b6020908102919091010152604051639dde597760e01b81527352aa899454998be5b000ad077a46bbe360f4e49790639dde59779061085e9084906004016112e5565b600060405180830381600087803b15801561087857600080fd5b505af115801561088c573d6000803e3d6000fd5b50505050506060600167ffffffffffffffff811180156108ab57600080fd5b506040519080825280602002602001820160405280156108e557816020015b6108d2610ede565b8152602001906001900390816108ca5790505b5090506040518060800160405280736c9f097e044506712b58eac670c9a5fd4bccef136001600160a01b031681526020016103e88152602001601e815260200160008152508160008151811061093757fe5b6020908102919091010152604051633fbdb00160e11b81527352aa899454998be5b000ad077a46bbe360f4e49790637f7b600290610979908490600401611370565b600060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b5050505050565b6109cb73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486109e4565b6102c273dac17f958d2ee523a2206206994597c13d831ec75b600073324c5dc1fc42c7a4d43d92df1eba58a54d13bf2d6001600160a01b031663968cbade732cc710218f2e3a82ccc77cc4b3b93ee6ba9451cd63f9f872f560e01b736c9f097e044506712b58eac670c9a5fd4bccef1386604051602401610a4d9291906111bf565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252610a9392916004016111d9565b602060405180830381600087803b158015610aad57600080fd5b505af1158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190610fac565b60408051600180825281830190925291925060609190816020015b610b08610f0f565b815260200190600190039081610b005790505090506040518060c00160405280836001600160a01b03168152602001736c9f097e044506712b58eac670c9a5fd4bccef136001600160a01b03168152602001600160ff1681526020016109c4815260200161a8c081526020016a0422ca8b0a00a42500000081525081600081518110610b9057fe5b60209081029190910101526040516301635db560e11b81527352aa899454998be5b000ad077a46bbe360f4e497906302c6bb6a90610bd2908490600401611454565b600060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b50505050506060600167ffffffffffffffff81118015610c1f57600080fd5b50604051908082528060200260200182016040528015610c5957816020015b610c46610f5a565b815260200190600190039081610c3e5790505b5090506040518060e00160405280836001600160a01b03168152602001846001600160a01b03168152602001600160ff1681526020016107d0815260200161a8c0815260200165067aeb18120081526020016508a3e420180081525081600081518110610cc257fe5b602090810291909101015260405162dc47c360e11b81527352aa899454998be5b000ad077a46bbe360f4e497906301b88f8690610d039084906004016113d0565b600060405180830381600087803b158015610d1d57600080fd5b505af1158015610d31573d6000803e3d6000fd5b50506040516354b04ef560e01b81526001600160a01b03851693506354b04ef59250610d7e915061271090614e209061226090612328906124b89060c890610190906000906004016114ce565b600060405180830381600087803b158015610d9857600080fd5b505af1158015610dac573d6000803e3d6000fd5b505060405163072d137f60e21b81526001600160a01b0384169250631cb44dfc9150610df0907358455665979fdf24c3ea8674323326bd99237e12906004016111ab565b600060405180830381600087803b158015610e0a57600080fd5b505af1158015610e1e573d6000803e3d6000fd5b505060405163b046a44960e01b81526001600160a01b038416925063b046a4499150610e629073264786ef916af64a1db19f513f24a3681734ce92906004016111ab565b600060405180830381600087803b158015610e7c57600080fd5b505af1158015610e90573d6000803e3d6000fd5b505050505050565b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600060ff1681526020016000815260200160008152602001600081525090565b6040518060e0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600060ff168152602001600081526020016000815260200160008152602001600081525090565b600060208284031215610fbd578081fd5b81516001600160a01b0381168114610fd3578182fd5b9392505050565b60006020808385031215610fec578182fd5b823567ffffffffffffffff80821115611003578384fd5b818501915085601f830112611016578384fd5b81358181111561102257fe5b604051601f8201601f191681018501838111828210171561103f57fe5b6040528181528382018501881015611055578586fd5b818585018683013790810190930193909352509392505050565b600060208284031215611080578081fd5b5051919050565b60008282518085526020808601955080818302840101818601855b848110156110d057601f198684030189526110be838351611160565b988401989250908301906001016110a2565b5090979650505050505050565b60008282518085526020808601955080818302840101818601855b848110156110d057601f19868403018952611114838351611160565b988401989250908301906001016110f8565b6000815180845260208085019450808401835b8381101561115557815187529582019590820190600101611139565b509495945050505050565b60008151808452815b8181101561118557602081850181015186830182015201611169565b818111156111965782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03831681526040602082018190526000906111fd90830184611160565b949350505050565b600060018060a01b038416825260606020830152600960608301526865786563757465282960b81b608083015260a060408301526111fd60a0830184611160565b60a0808252865190820181905260009060209060c0840190828a01845b828110156112885781516001600160a01b031684529284019290840190600101611263565b5050508381038285015261129c8189611126565b91505082810360408401526112b181876110dd565b905082810360608401526112c58186611087565b905082810360808401526112d98185611160565b98975050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561136357815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e09093019290850190600101611302565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561136357815180516001600160a01b0316855286810151878601528581015186860152606090810151908501526080909301929085019060010161138d565b602080825282518282018190526000919060409081850190868401855b8281101561136357815180516001600160a01b0390811686528782015116878601528581015160ff1686860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e090930192908501906001016113ed565b602080825282518282018190526000919060409081850190868401855b8281101561136357815180516001600160a01b0390811686528782015116878601528581015160ff1686860152606080820151908601526080808201519086015260a0908101519085015260c09093019290850190600101611471565b978852602088019690965260408701949094526060860192909252608085015260a084015260c083015260e08201526101000190565b6020808252601690820152751b5cd9cb9cd95b99195c8b5b9bdd0b585b1b1bddd95960521b604082015260600190565b60208082526014908201527350524f504f53414c5f49535f4e4f545f53414d4560601b604082015260600190565b60208082526010908201526f3737ba16bb30b634b216b1b0b63632b960811b604082015260600190565b9081526020019056fe657865637574655061796c6f616428616464726573732c737472696e672c627974657329a26469706673582212201706c7e1c2ddf32308c86f3c5e046d207428fa4f7e93e8cafcc1a29bca40803e64736f6c63430007030033","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ADDRESS_THIS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERNOR","outputs":[{"internalType":"contract IGovernorBravo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LIQUIDITY","outputs":[{"internalType":"contract IFluidLiquidityAdmin","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSAL_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG_2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PT_sUSDe_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TEAM_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TIMELOCK","outputs":[{"internalType":"contract ITimelock","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDT_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VAULT_T1_DEPLOYMENT_LOGIC","outputs":[{"internalType":"contract IFluidVaultT1DeploymentLogic","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VAULT_T1_FACTORY","outputs":[{"internalType":"contract IFluidVaultT1Factory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sUSDe_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyProposal","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wstETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]}