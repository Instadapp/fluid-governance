{"metadata":"{\"defaultCompiler\":{\"version\":\"0.7.3\"},\"sources\":{\"contracts/payloads/IGP37/PayloadIGP37.sol\":{\"content\":\"pragma solidity >=0.7.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IGovernorBravo {\\n    function _acceptAdmin() external;\\n\\n    function _setVotingDelay(uint newVotingDelay) external;\\n\\n    function _setVotingPeriod(uint newVotingPeriod) external;\\n\\n    function _acceptAdminOnTimelock() external;\\n\\n    function _setImplementation(address implementation_) external;\\n\\n    function propose(\\n        address[] memory targets,\\n        uint[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) external returns (uint);\\n\\n    function admin() external view returns (address);\\n\\n    function pendingAdmin() external view returns (address);\\n\\n    function timelock() external view returns (address);\\n\\n    function votingDelay() external view returns (uint256);\\n\\n    function votingPeriod() external view returns (uint256);\\n}\\n\\ninterface ITimelock {\\n    function acceptAdmin() external;\\n\\n    function setDelay(uint delay_) external;\\n\\n    function setPendingAdmin(address pendingAdmin_) external;\\n\\n    function queueTransaction(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta\\n    ) external returns (bytes32);\\n\\n    function executeTransaction(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta\\n    ) external payable returns (bytes memory);\\n\\n    function pendingAdmin() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function delay() external view returns (uint256);\\n}\\n\\ninterface AdminModuleStructs {\\n    struct AddressBool {\\n        address addr;\\n        bool value;\\n    }\\n\\n    struct AddressUint256 {\\n        address addr;\\n        uint256 value;\\n    }\\n\\n    struct RateDataV1Params {\\n        address token;\\n        uint256 kink;\\n        uint256 rateAtUtilizationZero;\\n        uint256 rateAtUtilizationKink;\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    struct RateDataV2Params {\\n        address token;\\n        uint256 kink1;\\n        uint256 kink2;\\n        uint256 rateAtUtilizationZero;\\n        uint256 rateAtUtilizationKink1;\\n        uint256 rateAtUtilizationKink2;\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    struct TokenConfig {\\n        address token;\\n        uint256 fee;\\n        uint256 threshold;\\n        uint256 maxUtilization;\\n    }\\n\\n    struct UserSupplyConfig {\\n        address user;\\n        address token;\\n        uint8 mode;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseWithdrawalLimit;\\n    }\\n\\n    struct UserBorrowConfig {\\n        address user;\\n        address token;\\n        uint8 mode;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseDebtCeiling;\\n        uint256 maxDebtCeiling;\\n    }\\n}\\n\\ninterface IFluidVaultT1 {\\n    /// @notice updates the Vault oracle to `newOracle_`. Must implement the FluidOracle interface.\\n    function updateOracle(address newOracle_) external;\\n\\n    /// @notice updates the all Vault core settings according to input params.\\n    /// All input values are expected in 1e2 (1% = 100, 100% = 10_000).\\n    function updateCoreSettings(\\n        uint256 supplyRateMagnifier_,\\n        uint256 borrowRateMagnifier_,\\n        uint256 collateralFactor_,\\n        uint256 liquidationThreshold_,\\n        uint256 liquidationMaxLimit_,\\n        uint256 withdrawGap_,\\n        uint256 liquidationPenalty_,\\n        uint256 borrowFee_\\n    ) external;\\n\\n    /// @notice updates the allowed rebalancer to `newRebalancer_`.\\n    function updateRebalancer(address newRebalancer_) external;\\n\\n    /// @notice updates the supply rate magnifier to `supplyRateMagnifier_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateSupplyRateMagnifier(uint supplyRateMagnifier_) external;\\n\\n    /// @notice updates the borrow rate magnifier to `borrowRateMagnifier_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateBorrowRateMagnifier(uint borrowRateMagnifier_) external;\\n\\n    /// @notice updates the collateral factor to `collateralFactor_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateCollateralFactor(uint collateralFactor_) external;\\n\\n    /// @notice updates the liquidation threshold to `liquidationThreshold_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateLiquidationThreshold(uint liquidationThreshold_) external;\\n\\n    /// @notice updates the liquidation max limit to `liquidationMaxLimit_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateLiquidationMaxLimit(uint liquidationMaxLimit_) external;\\n\\n    /// @notice updates the withdrawal gap to `withdrawGap_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateWithdrawGap(uint withdrawGap_) external;\\n\\n    /// @notice updates the liquidation penalty to `liquidationPenalty_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateLiquidationPenalty(uint liquidationPenalty_) external;\\n\\n    /// @notice updates the borrow fee to `borrowFee_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateBorrowFee(uint borrowFee_) external;\\n}\\n\\ninterface IProxy {\\n    function setAdmin(address newAdmin_) external;\\n\\n    function setDummyImplementation(address newDummyImplementation_) external;\\n\\n    function addImplementation(\\n        address implementation_,\\n        bytes4[] calldata sigs_\\n    ) external;\\n\\n    function removeImplementation(address implementation_) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function getDummyImplementation() external view returns (address);\\n\\n    function getImplementationSigs(\\n        address impl_\\n    ) external view returns (bytes4[] memory);\\n\\n    function getSigsImplementation(bytes4 sig_) external view returns (address);\\n\\n    function readFromStorage(\\n        bytes32 slot_\\n    ) external view returns (uint256 result_);\\n}\\n\\ninterface ILite {\\n    function setAdmin(address newAdmin) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function removeImplementation(address implementation_) external;\\n\\n    function addImplementation(\\n        address implementation_,\\n        bytes4[] calldata sigs_\\n    ) external;\\n\\n    function setDummyImplementation(address newDummyImplementation_) external;\\n\\n    function updateMaxRiskRatio(\\n        uint8[] memory protocolId_,\\n        uint256[] memory newRiskRatio_\\n    ) external;\\n\\n    function updateAggrMaxVaultRatio(uint256 newAggrMaxVaultRatio_) external;\\n\\n    function getImplementationSigs(\\n        address impl_\\n    ) external view returns (bytes4[] memory);\\n}\\n\\ninterface IDSAV2 {\\n    function cast(\\n        string[] memory _targetNames,\\n        bytes[] memory _datas,\\n        address _origin\\n    ) external payable returns (bytes32);\\n\\n    function isAuth(address user) external view returns (bool);\\n}\\n\\ninterface IFluidVaultT1Factory {\\n    function deployVault(\\n        address vaultDeploymentLogic_,\\n        bytes calldata vaultDeploymentData_\\n    ) external returns (address vault_);\\n\\n    function setVaultAuth(\\n        address vault_,\\n        address vaultAuth_,\\n        bool allowed_\\n    ) external;\\n\\n    function getVaultAddress(\\n        uint256 vaultId_\\n    ) external view returns (address vault_);\\n\\n    function readFromStorage(\\n        bytes32 slot_\\n    ) external view returns (uint256 result_);\\n}\\n\\ninterface IFluidReserveContract {\\n    function isRebalancer(address user) external returns (bool);\\n\\n    function rebalanceFToken(address protocol_) external;\\n\\n    function rebalanceVault(address protocol_) external;\\n\\n    function transferFunds(address token_) external;\\n\\n    function getProtocolTokens(address protocol_) external;\\n\\n    function updateAuth(address auth_, bool isAuth_) external;\\n\\n    function updateRebalancer(address rebalancer_, bool isRebalancer_) external;\\n\\n    function approve(\\n        address[] memory protocols_,\\n        address[] memory tokens_,\\n        uint256[] memory amounts_\\n    ) external;\\n\\n    function revoke(\\n        address[] memory protocols_,\\n        address[] memory tokens_\\n    ) external;\\n}\\n\\ninterface IERC20 {\\n    function allowance(\\n        address spender,\\n        address caller\\n    ) external view returns (uint256);\\n}\\n\\ninterface IFluidLiquidityAdmin {\\n    function readFromStorage(\\n        bytes32 slot_\\n    ) external view returns (uint256 result_);\\n\\n    /// @notice adds/removes auths. Auths generally could be contracts which can have restricted actions defined on contract.\\n    ///         auths can be helpful in reducing governance overhead where it's not needed.\\n    /// @param authsStatus_ array of structs setting allowed status for an address.\\n    ///                     status true => add auth, false => remove auth\\n    function updateAuths(\\n        AdminModuleStructs.AddressBool[] calldata authsStatus_\\n    ) external;\\n\\n    /// @notice adds/removes guardians. Only callable by Governance.\\n    /// @param guardiansStatus_ array of structs setting allowed status for an address.\\n    ///                         status true => add guardian, false => remove guardian\\n    function updateGuardians(\\n        AdminModuleStructs.AddressBool[] calldata guardiansStatus_\\n    ) external;\\n\\n    /// @notice changes the revenue collector address (contract that is sent revenue). Only callable by Governance.\\n    /// @param revenueCollector_  new revenue collector address\\n    function updateRevenueCollector(address revenueCollector_) external;\\n\\n    /// @notice changes current status, e.g. for pausing or unpausing all user operations. Only callable by Auths.\\n    /// @param newStatus_ new status\\n    ///        status = 2 -> pause, status = 1 -> resume.\\n    function changeStatus(uint256 newStatus_) external;\\n\\n    /// @notice                  update tokens rate data version 1. Only callable by Auths.\\n    /// @param tokensRateData_   array of RateDataV1Params with rate data to set for each token\\n    function updateRateDataV1s(\\n        AdminModuleStructs.RateDataV1Params[] calldata tokensRateData_\\n    ) external;\\n\\n    /// @notice                  update tokens rate data version 2. Only callable by Auths.\\n    /// @param tokensRateData_   array of RateDataV2Params with rate data to set for each token\\n    function updateRateDataV2s(\\n        AdminModuleStructs.RateDataV2Params[] calldata tokensRateData_\\n    ) external;\\n\\n    /// @notice updates token configs: fee charge on borrowers interest & storage update utilization threshold.\\n    ///         Only callable by Auths.\\n    /// @param tokenConfigs_ contains token address, fee & utilization threshold\\n    function updateTokenConfigs(\\n        AdminModuleStructs.TokenConfig[] calldata tokenConfigs_\\n    ) external;\\n\\n    /// @notice updates user classes: 0 is for new protocols, 1 is for established protocols.\\n    ///         Only callable by Auths.\\n    /// @param userClasses_ struct array of uint256 value to assign for each user address\\n    function updateUserClasses(\\n        AdminModuleStructs.AddressUint256[] calldata userClasses_\\n    ) external;\\n\\n    /// @notice sets user supply configs per token basis. Eg: with interest or interest-free and automated limits.\\n    ///         Only callable by Auths.\\n    /// @param userSupplyConfigs_ struct array containing user supply config, see `UserSupplyConfig` struct for more info\\n    function updateUserSupplyConfigs(\\n        AdminModuleStructs.UserSupplyConfig[] memory userSupplyConfigs_\\n    ) external;\\n\\n    /// @notice setting user borrow configs per token basis. Eg: with interest or interest-free and automated limits.\\n    ///         Only callable by Auths.\\n    /// @param userBorrowConfigs_ struct array containing user borrow config, see `UserBorrowConfig` struct for more info\\n    function updateUserBorrowConfigs(\\n        AdminModuleStructs.UserBorrowConfig[] memory userBorrowConfigs_\\n    ) external;\\n\\n    /// @notice pause operations for a particular user in class 0 (class 1 users can't be paused by guardians).\\n    /// Only callable by Guardians.\\n    /// @param user_          address of user to pause operations for\\n    /// @param supplyTokens_  token addresses to pause withdrawals for\\n    /// @param borrowTokens_  token addresses to pause borrowings for\\n    function pauseUser(\\n        address user_,\\n        address[] calldata supplyTokens_,\\n        address[] calldata borrowTokens_\\n    ) external;\\n\\n    /// @notice unpause operations for a particular user in class 0 (class 1 users can't be paused by guardians).\\n    /// Only callable by Guardians.\\n    /// @param user_          address of user to unpause operations for\\n    /// @param supplyTokens_  token addresses to unpause withdrawals for\\n    /// @param borrowTokens_  token addresses to unpause borrowings for\\n    function unpauseUser(\\n        address user_,\\n        address[] calldata supplyTokens_,\\n        address[] calldata borrowTokens_\\n    ) external;\\n\\n    /// @notice         collects revenue for tokens to configured revenueCollector address.\\n    /// @param tokens_  array of tokens to collect revenue for\\n    /// @dev            Note that this can revert if token balance is < revenueAmount (utilization > 100%)\\n    function collectRevenue(address[] calldata tokens_) external;\\n\\n    /// @notice gets the current updated exchange prices for n tokens and updates all prices, rates related data in storage.\\n    /// @param tokens_ tokens to update exchange prices for\\n    /// @return supplyExchangePrices_ new supply rates of overall system for each token\\n    /// @return borrowExchangePrices_ new borrow rates of overall system for each token\\n    function updateExchangePrices(\\n        address[] calldata tokens_\\n    )\\n        external\\n        returns (\\n            uint256[] memory supplyExchangePrices_,\\n            uint256[] memory borrowExchangePrices_\\n        );\\n}\\n\\ninterface IFTokenAdmin {\\n    /// @notice updates the rewards rate model contract.\\n    ///         Only callable by LendingFactory auths.\\n    /// @param rewardsRateModel_  the new rewards rate model contract address.\\n    ///                           can be set to address(0) to set no rewards (to save gas)\\n    function updateRewards(address rewardsRateModel_) external;\\n\\n    /// @notice Balances out the difference between fToken supply at Liquidity vs totalAssets().\\n    ///         Deposits underlying from rebalancer address into Liquidity but doesn't mint any shares\\n    ///         -> thus making deposit available as rewards.\\n    ///         Only callable by rebalancer.\\n    /// @return assets_ amount deposited to Liquidity\\n    function rebalance() external payable returns (uint256 assets_);\\n\\n    /// @notice gets the liquidity exchange price of the underlying asset, calculates the updated exchange price (with reward rates)\\n    ///         and writes those values to storage.\\n    ///         Callable by anyone.\\n    /// @return tokenExchangePrice_ exchange price of fToken share to underlying asset\\n    /// @return liquidityExchangePrice_ exchange price at Liquidity for the underlying asset\\n    function updateRates()\\n        external\\n        returns (uint256 tokenExchangePrice_, uint256 liquidityExchangePrice_);\\n\\n    /// @notice sends any potentially stuck funds to Liquidity contract. Only callable by LendingFactory auths.\\n    function rescueFunds(address token_) external;\\n\\n    /// @notice Updates the rebalancer address (ReserveContract). Only callable by LendingFactory auths.\\n    function updateRebalancer(address rebalancer_) external;\\n}\\n\\ninterface ILiquiditySigs {\\n    // ZircuitTransferModule\\n    function depositZircuitWeETH() external;\\n    function withdrawZircuitWeETH() external;\\n    function depositZircuitWeETHs() external;\\n    function withdrawZircuitWeETHs() external;\\n\\n    // Admin Module\\n    function updateUserWithdrawalLimit(address user_, address token_, uint256 newLimit_) external;\\n}\\n\\ninterface ILiteSigs {\\n    // Leverage Module\\n    function leverage(\\n        uint8 protocolId_,\\n        uint256 route_,\\n        uint256 wstETHflashAmount_,\\n        uint256 wETHBorrowAmount_,\\n        address[] memory vaults_,\\n        uint256[] memory vaultAmounts_,\\n        uint256 swapMode_,\\n        string[] memory _swapConnectors,\\n        bytes[] memory _swapDatas,\\n        uint256 unitAmount_\\n    ) external;\\n\\n    // Admin Module\\n    function enableAaveV3LidoEMode() external;\\n\\n    // View Module\\n    function getRatioFluidNew(\\n        uint256 stEthPerWsteth_\\n    )\\n        external\\n        view\\n        returns (\\n            uint256 wstEthAmount_,\\n            uint256 stEthAmount_,\\n            uint256 ethAmount_,\\n            uint256 ratio_\\n        );\\n\\n    function getRatioAaveV3Lido(\\n        uint256 stEthPerWsteth_\\n    )\\n    external\\n    view\\n    returns (\\n        uint256 wstEthAmount_,\\n        uint256 stEthAmount_,\\n        uint256 ethAmount_,\\n        uint256 ratio_\\n    );\\n}\\n\\ncontract PayloadIGP37 {\\n    uint256 public constant PROPOSAL_ID = 37;\\n\\n    address public constant PROPOSER =\\n        0xA45f7bD6A5Ff45D31aaCE6bCD3d426D9328cea01;\\n\\n    address public constant PROPOSER_AVO_MULTISIG =\\n        0x059A94A72951c0ae1cc1CE3BF0dB52421bbE8210;\\n\\n    address public constant PROPOSER_AVO_MULTISIG_2 =\\n        0x9efdE135CA4832AbF0408c44c6f5f370eB0f35e8;\\n\\n    address public constant PROPOSER_AVO_MULTISIG_3 =\\n        0x5C43AAC965ff230AC1cF63e924D0153291D78BaD;\\n\\n    IGovernorBravo public constant GOVERNOR =\\n        IGovernorBravo(0x0204Cd037B2ec03605CFdFe482D8e257C765fA1B);\\n    ITimelock public immutable TIMELOCK =\\n        ITimelock(0x2386DC45AdDed673317eF068992F19421B481F4c);\\n\\n    IFluidLiquidityAdmin public constant LIQUIDITY =\\n        IFluidLiquidityAdmin(0x52Aa899454998Be5b000Ad077a46Bbe360F4e497);\\n\\n    IDSAV2 public constant TREASURY =\\n        IDSAV2(0x28849D2b63fA8D361e5fc15cB8aBB13019884d09);\\n\\n    address public immutable ADDRESS_THIS;\\n\\n    address public constant TEAM_MULTISIG =\\n        0x4F6F977aCDD1177DCD81aB83074855EcB9C2D49e;\\n\\n    ILite public constant LITE =\\n        ILite(0xA0D3707c569ff8C87FA923d3823eC5D81c98Be78);\\n\\n    constructor() {\\n        ADDRESS_THIS = address(this);\\n    }\\n\\n    function propose(string memory description) external {\\n        require(\\n            msg.sender == PROPOSER ||\\n                msg.sender == TEAM_MULTISIG ||\\n                address(this) == PROPOSER_AVO_MULTISIG ||\\n                address(this) == PROPOSER_AVO_MULTISIG_2 ||\\n                address(PROPOSER_AVO_MULTISIG_3) == PROPOSER_AVO_MULTISIG_3,\\n            \\\"msg.sender-not-allowed\\\"\\n        );\\n\\n        uint256 totalActions = 1;\\n        address[] memory targets = new address[](totalActions);\\n        uint256[] memory values = new uint256[](totalActions);\\n        string[] memory signatures = new string[](totalActions);\\n        bytes[] memory calldatas = new bytes[](totalActions);\\n\\n        // Action 1: call executePayload on timelock contract to execute payload related to Lite & Fluid\\n        targets[0] = address(TIMELOCK);\\n        values[0] = 0;\\n        signatures[0] = \\\"executePayload(address,string,bytes)\\\";\\n        calldatas[0] = abi.encode(ADDRESS_THIS, \\\"execute()\\\", abi.encode());\\n\\n        uint256 proposedId = GOVERNOR.propose(\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            description\\n        );\\n\\n        require(proposedId == PROPOSAL_ID, \\\"PROPOSAL_IS_NOT_SAME\\\");\\n    }\\n\\n    function execute() external {\\n        require(address(this) == address(TIMELOCK), \\\"not-valid-caller\\\");\\n\\n        // Action 1: Update UserModule, AdminModule, ZircuitTransferModule, DummyImplementation on Liquidity Layer\\n        action1();\\n\\n        // Action 2: Remove and new wstETH/ETH Buffer rate handler as auth on Liquidity\\n        action2();\\n\\n        // Action 3: Update iETHv2 Lite Implementations\\n        action3();\\n\\n        // Action 4: Set Configs on iETHv2 Lite\\n        action4();\\n    }\\n\\n    function verifyProposal() external view {}\\n\\n    /***********************************|\\n    |     Proposal Payload Actions      |\\n    |__________________________________*/\\n\\n    /// @notice Action 1: Update UserModule, AdminModule, ZircuitTransferModule, DummyImplementation on Liquidity Layer.\\n    function action1() internal {\\n        // UserModule\\n        {\\n            bytes4[] memory sigs_ = IProxy(address(LIQUIDITY))\\n                .getImplementationSigs(\\n                    0xb290b44D34C4a44E233af73998C543832c418120\\n                );\\n            IProxy(address(LIQUIDITY)).removeImplementation(\\n                0xb290b44D34C4a44E233af73998C543832c418120\\n            );\\n\\n            IProxy(address(LIQUIDITY)).addImplementation(\\n                0x8eC5e29eA39b2f64B21e32cB9Ff11D5059982F8C,\\n                sigs_\\n            );\\n        }\\n\\n        // AdminModule\\n        {\\n            bytes4[] memory sigs_ = IProxy(address(LIQUIDITY))\\n                .getImplementationSigs(\\n                    0xBDF3e6A0c721117B69150D00D9Fb27873023E4Df\\n                );\\n            IProxy(address(LIQUIDITY)).removeImplementation(\\n                0xBDF3e6A0c721117B69150D00D9Fb27873023E4Df\\n            );\\n\\n            // Add the new signature\\n            bytes4[] memory newSigs = new bytes4[](sigs_.length + 1);\\n            for (uint i = 0; i < sigs_.length; i++) {\\n                newSigs[i] = sigs_[i];\\n            }\\n            newSigs[sigs_.length] = ILiquiditySigs.updateUserWithdrawalLimit.selector;\\n\\n            IProxy(address(LIQUIDITY)).addImplementation(\\n                0xC3800E7527145837e525cfA6AD96B6B5DaE01586,\\n                newSigs\\n            );\\n        }\\n\\n        // ZircuitTransferModule\\n        {\\n            IProxy(address(LIQUIDITY)).removeImplementation(\\n                0xaD99E8416f505aCE0A087C5dAB7214F15aE3D1d1\\n            );\\n            bytes4[] memory sigs_ = new bytes4[](4);\\n            sigs_[0] = ILiquiditySigs.depositZircuitWeETH.selector;\\n            sigs_[1] = ILiquiditySigs.withdrawZircuitWeETH.selector;\\n            sigs_[2] = ILiquiditySigs.depositZircuitWeETHs.selector;\\n            sigs_[3] = ILiquiditySigs.withdrawZircuitWeETHs.selector;\\n\\n            IProxy(address(LIQUIDITY)).addImplementation(\\n                0x9191b9539DD588dB81076900deFDd79Cb1115f72,\\n                sigs_\\n            );\\n        }\\n\\n        // Update Dummy Implementation\\n        {\\n            IProxy(address(LIQUIDITY)).setDummyImplementation(\\n                0xa57D7CeF617271F4cEa4f665D33ebcFcBA4929f6\\n            );\\n        }\\n\\n        // Call depositZircuitWeETHs\\n        {\\n            ILiquiditySigs(address(LIQUIDITY)).depositZircuitWeETHs();\\n        }\\n    }\\n\\n    /// @notice Action 2: Remove and new wstETH/ETH Buffer rate handler as auth on Liquidity\\n    function action2() internal {\\n        AdminModuleStructs.AddressBool[]\\n            memory addrBools_ = new AdminModuleStructs.AddressBool[](2);\\n\\n        // old wstETH/ETH Buffer rate\\n        addrBools_[0] = AdminModuleStructs.AddressBool({\\n            addr: 0xDF10FE6163c1bfB99d7179e1bFC2e0Bb6128704f,\\n            value: false\\n        });\\n\\n        // new wstETH/ETH Buffer rate\\n        addrBools_[1] = AdminModuleStructs.AddressBool({\\n            addr: 0xB5af15a931dA1B1a7B8DCF6E2Cd31C8a3Dd1E134,\\n            value: true\\n        });\\n\\n        LIQUIDITY.updateAuths(addrBools_);\\n    }\\n\\n    /// @notice Action 3: Update iETHv2 Lite Implementations\\n    function action3() internal {\\n        {\\n            // Admin Module\\n            bytes4[] memory newSigs_ = new bytes4[](1);\\n\\n            newSigs_[0] = ILiteSigs.enableAaveV3LidoEMode.selector;\\n\\n            _updateLiteImplementation(\\n                0xA7dC9540f00358a7ca46780de2FdEBD7F673C127,\\n                0xe8620e95b52ec1CD29dA337519a43D8fFB07e82C,\\n                newSigs_,\\n                false\\n            );\\n        }\\n\\n        {\\n            // User Module\\n            bytes4[] memory newSigs_ = new bytes4[](0);\\n\\n            _updateLiteImplementation(\\n                0x7ee8b5C11b578DD1E8c02D641508A305281Bd173,\\n                0xC1BDdF4ca56358Ed8899b50369C191ADfb6Ec75A,\\n                newSigs_,\\n                false\\n            );\\n        }\\n\\n        {\\n            // Rebalance Module\\n            bytes4[] memory newSigs_ = new bytes4[](0);\\n\\n            _updateLiteImplementation(\\n                0x871176C000603665Ce1133C0aAC783B79257E9C6,\\n                0x7C44B02dA7826f9e14264a8E2D48a92bb86F72ee,\\n                newSigs_,\\n                false\\n            );\\n        }\\n\\n        {\\n            // Refinance Module\\n            bytes4[] memory newSigs_ = new bytes4[](0);\\n\\n            _updateLiteImplementation(\\n                0x4e05681632e1401a89335EDaB3E36612Ae8E1D1E,\\n                0x807675e4D1eC7c1c134940Ab513B288d150E8023,\\n                newSigs_,\\n                false\\n            );\\n        }\\n\\n        {\\n            // Leverage Module\\n            bytes4[] memory newSigs_ = new bytes4[](1);\\n\\n            newSigs_[0] = ILiteSigs.leverage.selector;\\n\\n            _updateLiteImplementation(\\n                0x5b94f032799CC36fFd3E8CA9BCeA2bA5af40d43E,\\n                0x42aFc927E8Ab5D14b2760625Eb188158eefB46be,\\n                newSigs_,\\n                true\\n            );\\n        }\\n\\n        {\\n            // Withdrawals Module\\n            bytes4[] memory newSigs_ = new bytes4[](0);\\n\\n            _updateLiteImplementation(\\n                0x6A64A3E0af38279ac7455c85b2C683f5621cE2e7,\\n                0x6aa752b1462e7C71aA90e9236a817263bb5E0c72,\\n                newSigs_,\\n                false\\n            );\\n        }\\n\\n        {\\n            // Fluid stETH Module\\n            bytes4[] memory newSigs_ = new bytes4[](0);\\n\\n            _updateLiteImplementation(\\n                0x0F1679FB1d5B2981423c757e8ea91979fabDB2D1,\\n                0xd23a760cD16610f67a68BADC3c5E04E9898d2789,\\n                newSigs_,\\n                false\\n            );\\n        }\\n\\n        {\\n            // View Module\\n            bytes4[] memory newSigs_ = new bytes4[](2);\\n\\n            newSigs_[0] = ILiteSigs.getRatioFluidNew.selector;\\n            newSigs_[1] = ILiteSigs.getRatioAaveV3Lido.selector;\\n\\n            _updateLiteImplementation(\\n                0x645b137ACa041B85c057a4A396086789cFD99041,\\n                0x24d58FcFA6d74c5aCc1E4b6814BF5703e1CDd8a8,\\n                newSigs_,\\n                false\\n            );\\n        }\\n\\n        // Update Dummy Implementation\\n        LITE.setDummyImplementation(0x37b1aF815f153cAfCc6BA8f503AbE05AE40099F0);\\n    }\\n\\n    /// @notice Action 4: Set Configs on iETHv2 Lite\\n    function action4() internal {\\n        // Enable E-Mode on Lido Aave v3 Market\\n        {\\n            ILiteSigs(address(LITE)).enableAaveV3LidoEMode();\\n        }\\n\\n        // Set Max Risk Ratio for Fluid and Lido Aave v3\\n        {\\n            uint8[] memory protocolId_ =  new uint8[](2);\\n            uint256[] memory newRiskRatio_ = new uint256[](2);\\n\\n            {\\n                protocolId_[0] = 9;\\n                newRiskRatio_[0] = 95_0000;\\n            }\\n\\n            {\\n                protocolId_[1] = 10;\\n                newRiskRatio_[1] = 93_0000;\\n            }\\n\\n            LITE.updateMaxRiskRatio(protocolId_, newRiskRatio_);\\n        }\\n    }\\n\\n    function _updateLiteImplementation(\\n        address oldImplementation_,\\n        address newImplementation_,\\n        bytes4[] memory newSigs_,\\n        bool replace_\\n    ) internal {\\n        bytes4[] memory oldSigs_;\\n\\n        if (oldImplementation_ != address(0) && !replace_)\\n            oldSigs_ = LITE.getImplementationSigs(oldImplementation_);\\n\\n        bytes4[] memory allSigs_ = new bytes4[](\\n            oldSigs_.length + newSigs_.length\\n        );\\n        uint256 j_;\\n        for (uint i = 0; i < oldSigs_.length; i++) {\\n            allSigs_[j_++] = oldSigs_[i];\\n        }\\n\\n        for (uint i = 0; i < newSigs_.length; i++) {\\n            allSigs_[j_++] = newSigs_[i];\\n        }\\n\\n        LITE.removeImplementation(oldImplementation_);\\n        LITE.addImplementation(newImplementation_, allSigs_);\\n    }\\n}\\n\",\"versionPragma\":\">=0.7.0\"}}}","address":"0x658CEd4a7Ff825278Bc64A34fE683e329d3af41e","bytecode":"0x60c0604052732386dc45added673317ef068992f19421b481f4c60805234801561002857600080fd5b503060a05260805160a051611c606100676000396000818161026901526105ab0152600081816101de0152818161029601526104ea0152611c606000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806366760d7d11610097578063aa98df3911610066578063aa98df391461021b578063b788f3a11461022e578063bffa7f0f14610249578063cc025f7c1461026457600080fd5b806366760d7d146101bc5780636dc0ae22146101be5780637aadef8b146101d95780637e2f35fa1461020057600080fd5b80632861c7d1116100d35780632861c7d1146101635780632d2c55651461017e578063588c77e61461019957806361461954146101b457600080fd5b80630680f417146100fa5780630bc9136e1461013257806325ad7f4d14610148575b600080fd5b61011573a0d3707c569ff8c87fa923d3823ec5d81c98be7881565b6040516001600160a01b0390911681526020015b60405180910390f35b61013a602581565b604051908152602001610129565b610115739efde135ca4832abf0408c44c6f5f370eb0f35e881565b6101157352aa899454998be5b000ad077a46bbe360f4e49781565b6101157328849d2b63fa8d361e5fc15cb8abb13019884d0981565b610115735c43aac965ff230ac1cf63e924d0153291d78bad81565b6101bc61028b565b005b610115730204cd037b2ec03605cfdfe482d8e257c765fa1b81565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b61011573059a94a72951c0ae1cc1ce3bf0db52421bbe821081565b6101bc610229366004611781565b61031d565b610115734f6f977acdd1177dcd81ab83074855ecb9c2d49e81565b61011573a45f7bd6a5ff45d31aace6bcd3d426d9328cea0181565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102fb5760405162461bcd60e51b815260206004820152601060248201526f3737ba16bb30b634b216b1b0b63632b960811b60448201526064015b60405180910390fd5b6103036106d6565b61030b610dc6565b610313610f19565b61031b6112bb565b565b3373a45f7bd6a5ff45d31aace6bcd3d426d9328cea011480610352575033734f6f977acdd1177dcd81ab83074855ecb9c2d49e145b8061037057503073059a94a72951c0ae1cc1ce3bf0db52421bbe8210145b8061038e575030739efde135ca4832abf0408c44c6f5f370eb0f35e8145b80610397575060015b6103dc5760405162461bcd60e51b81526020600482015260166024820152751b5cd9cb9cd95b99195c8b5b9bdd0b585b1b1bddd95960521b60448201526064016102f2565b604080516001808252818301909252600090826020808301908036833701905050905060008267ffffffffffffffff81111561041a5761041a61173a565b604051908082528060200260200182016040528015610443578160200160208202803683370190505b50905060008367ffffffffffffffff8111156104615761046161173a565b60405190808252806020026020018201604052801561049457816020015b606081526020019060019003908161047f5790505b50905060008467ffffffffffffffff8111156104b2576104b261173a565b6040519080825280602002602001820160405280156104e557816020015b60608152602001906001900390816104d05790505b5090507f00000000000000000000000000000000000000000000000000000000000000008460008151811061051c5761051c611816565b60200260200101906001600160a01b031690816001600160a01b03168152505060008360008151811061055157610551611816565b602002602001018181525050604051806060016040528060248152602001611c07602491398260008151811061058957610589611816565b602090810291909101810191909152604080516000815291820181526105d2917f0000000000000000000000000000000000000000000000000000000000000000918101611872565b604051602081830303815290604052816000815181106105f4576105f4611816565b6020908102919091010152604051636d4ab48d60e11b8152600090730204cd037b2ec03605cfdfe482d8e257c765fa1b9063da95691a906106419088908890889088908e9060040161194b565b6020604051808303816000875af1158015610660573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068491906119ea565b9050602581146106cd5760405162461bcd60e51b815260206004820152601460248201527350524f504f53414c5f49535f4e4f545f53414d4560601b60448201526064016102f2565b50505050505050565b6040516311272db960e31b815273b290b44d34c4a44e233af73998c543832c41812060048201526000907352aa899454998be5b000ad077a46bbe360f4e497906389396dc890602401600060405180830381865afa15801561073c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107649190810190611a03565b60405163110bad1960e11b815273b290b44d34c4a44e233af73998c543832c41812060048201529091507352aa899454998be5b000ad077a46bbe360f4e497906322175a3290602401600060405180830381600087803b1580156107c757600080fd5b505af11580156107db573d6000803e3d6000fd5b50506040516378600da160e11b81527352aa899454998be5b000ad077a46bbe360f4e497925063f0c01b42915061082c90738ec5e29ea39b2f64b21e32cb9ff11d5059982f8c908590600401611ab7565b600060405180830381600087803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b50506040516311272db960e31b815273bdf3e6a0c721117b69150d00d9fb27873023e4df6004820152600093507352aa899454998be5b000ad077a46bbe360f4e49792506389396dc89150602401600060405180830381865afa1580156108c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ed9190810190611a03565b60405163110bad1960e11b815273bdf3e6a0c721117b69150d00d9fb27873023e4df60048201529091507352aa899454998be5b000ad077a46bbe360f4e497906322175a3290602401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b505050506000815160016109789190611b2d565b67ffffffffffffffff8111156109905761099061173a565b6040519080825280602002602001820160405280156109b9578160200160208202803683370190505b50905060005b8251811015610a1f578281815181106109da576109da611816565b60200260200101518282815181106109f4576109f4611816565b6001600160e01b03199092166020928302919091019091015280610a1781611b46565b9150506109bf565b50638f0c291660e01b81835181518110610a3b57610a3b611816565b6001600160e01b0319909216602092830291909101909101526040516378600da160e11b81527352aa899454998be5b000ad077a46bbe360f4e4979063f0c01b4290610aa19073c3800e7527145837e525cfa6ad96b6b5dae01586908590600401611ab7565b600060405180830381600087803b158015610abb57600080fd5b505af1158015610acf573d6000803e3d6000fd5b505060405163110bad1960e11b815273ad99e8416f505ace0a087c5dab7214f15ae3d1d160048201527352aa899454998be5b000ad077a46bbe360f4e49794506322175a3293506024019150610b229050565b600060405180830381600087803b158015610b3c57600080fd5b505af1158015610b50573d6000803e3d6000fd5b506000925060049150610b609050565b604051908082528060200260200182016040528015610b89578160200160208202803683370190505b5090506369b48e4e60e01b81600081518110610ba757610ba7611816565b6001600160e01b031990921660209283029190910190910152805163585f642360e11b9082906001908110610bde57610bde611816565b6001600160e01b031990921660209283029190910190910152805162bd047d60e51b9082906002908110610c1457610c14611816565b6001600160e01b0319909216602092830291909101909101528051638147c98960e01b9082906003908110610c4b57610c4b611816565b6001600160e01b0319909216602092830291909101909101526040516378600da160e11b81527352aa899454998be5b000ad077a46bbe360f4e4979063f0c01b4290610cb190739191b9539dd588db81076900defdd79cb1115f72908590600401611ab7565b600060405180830381600087803b158015610ccb57600080fd5b505af1158015610cdf573d6000803e3d6000fd5b505060405163c39aa07d60e01b815273a57d7cef617271f4cea4f665d33ebcfcba4929f660048201527352aa899454998be5b000ad077a46bbe360f4e497935063c39aa07d92506024019050600060405180830381600087803b158015610d4557600080fd5b505af1158015610d59573d6000803e3d6000fd5b505050507352aa899454998be5b000ad077a46bbe360f4e4976001600160a01b03166317a08fa06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610dac57600080fd5b505af1158015610dc0573d6000803e3d6000fd5b50505050565b60408051600280825260608201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610dde579050509050604051806040016040528073df10fe6163c1bfb99d7179e1bfc2e0bb6128704f6001600160a01b031681526020016000151581525081600081518110610e4f57610e4f611816565b6020026020010181905250604051806040016040528073b5af15a931da1b1a7b8dcf6e2cd31c8a3dd1e1346001600160a01b031681526020016001151581525081600181518110610ea257610ea2611816565b6020908102919091010152604051633f66feff60e01b81527352aa899454998be5b000ad077a46bbe360f4e49790633f66feff90610ee4908490600401611b5f565b600060405180830381600087803b158015610efe57600080fd5b505af1158015610f12573d6000803e3d6000fd5b5050505050565b6040805160018082528183019092526000916020808301908036833701905050905063648ae39b60e01b81600081518110610f5657610f56611816565b6001600160e01b031990921660209283029190910190910152610fa473a7dc9540f00358a7ca46780de2fdebd7f673c12773e8620e95b52ec1cd29da337519a43d8ffb07e82c836000611484565b50604080516000808252602082019092529050610fec737ee8b5c11b578dd1e8c02d641508a305281bd17373c1bddf4ca56358ed8899b50369c191adfb6ec75a836000611484565b5060408051600080825260208201909252905061103473871176c000603665ce1133c0aac783b79257e9c6737c44b02da7826f9e14264a8e2d48a92bb86f72ee836000611484565b5060408051600080825260208201909252905061107c734e05681632e1401a89335edab3e36612ae8e1d1e73807675e4d1ec7c1c134940ab513b288d150e8023836000611484565b50604080516001808252818301909252600091602080830190803683370190505090506371aec96860e01b816000815181106110ba576110ba611816565b6001600160e01b031990921660209283029190910190910152611108735b94f032799cc36ffd3e8ca9bcea2ba5af40d43e7342afc927e8ab5d14b2760625eb188158eefb46be836001611484565b50604080516000808252602082019092529050611150736a64a3e0af38279ac7455c85b2c683f5621ce2e7736aa752b1462e7c71aa90e9236a817263bb5e0c72836000611484565b50604080516000808252602082019092529050611198730f1679fb1d5b2981423c757e8ea91979fabdb2d173d23a760cd16610f67a68badc3c5e04e9898d2789836000611484565b5060408051600280825260608201835260009260208301908036833701905050905063072bb76960e01b816000815181106111d5576111d5611816565b6001600160e01b031990921660209283029190910190910152805163b63ddd4560e01b908290600190811061120c5761120c611816565b6001600160e01b03199092166020928302919091019091015261125a73645b137aca041b85c057a4a396086789cfd990417324d58fcfa6d74c5acc1e4b6814bf5703e1cdd8a8836000611484565b5060405163c39aa07d60e01b81527337b1af815f153cafcc6ba8f503abe05ae40099f0600482015273a0d3707c569ff8c87fa923d3823ec5d81c98be789063c39aa07d90602401600060405180830381600087803b158015610dac57600080fd5b73a0d3707c569ff8c87fa923d3823ec5d81c98be786001600160a01b031663648ae39b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561130a57600080fd5b505af115801561131e573d6000803e3d6000fd5b50600092506002915061132e9050565b604051908082528060200260200182016040528015611357578160200160208202803683370190505b50604080516002808252606082018352929350600092909160208301908036833701905050905060098260008151811061139357611393611816565b602002602001019060ff16908160ff1681525050620e7ef0816000815181106113be576113be611816565b602002602001018181525050600a826001815181106113df576113df611816565b602002602001019060ff16908160ff1681525050620e30d08160018151811061140a5761140a611816565b60209081029190910101526040516307ac73b360e31b815273a0d3707c569ff8c87fa923d3823ec5d81c98be7890633d639d989061144e9085908590600401611bac565b600060405180830381600087803b15801561146857600080fd5b505af115801561147c573d6000803e3d6000fd5b505050505050565b60606001600160a01b0385161580159061149c575081155b15611524576040516311272db960e31b81526001600160a01b038616600482015273a0d3707c569ff8c87fa923d3823ec5d81c98be78906389396dc890602401600060405180830381865afa1580156114f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115219190810190611a03565b90505b6000835182516115349190611b2d565b67ffffffffffffffff81111561154c5761154c61173a565b604051908082528060200260200182016040528015611575578160200160208202803683370190505b5090506000805b83518110156115e85783818151811061159757611597611816565b60200260200101518383806115ab90611b46565b9450815181106115bd576115bd611816565b6001600160e01b031990921660209283029190910190910152806115e081611b46565b91505061157c565b5060005b85518110156116585785818151811061160757611607611816565b602002602001015183838061161b90611b46565b94508151811061162d5761162d611816565b6001600160e01b0319909216602092830291909101909101528061165081611b46565b9150506115ec565b5060405163110bad1960e11b81526001600160a01b038816600482015273a0d3707c569ff8c87fa923d3823ec5d81c98be78906322175a3290602401600060405180830381600087803b1580156116ae57600080fd5b505af11580156116c2573d6000803e3d6000fd5b50506040516378600da160e11b815273a0d3707c569ff8c87fa923d3823ec5d81c98be78925063f0c01b4291506116ff9089908690600401611ab7565b600060405180830381600087803b15801561171957600080fd5b505af115801561172d573d6000803e3d6000fd5b5050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117795761177961173a565b604052919050565b6000602080838503121561179457600080fd5b823567ffffffffffffffff808211156117ac57600080fd5b818501915085601f8301126117c057600080fd5b8135818111156117d2576117d261173a565b6117e4601f8201601f19168501611750565b915080825286848285010111156117fa57600080fd5b8084840185840137600090820190930192909252509392505050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561185257602081850181015186830182015201611836565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038316815260606020820152600960608201526865786563757465282960b81b608082015260a0604082015260006118b360a083018461182c565b949350505050565b600081518084526020808501945080840160005b838110156118eb578151875295820195908201906001016118cf565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561193e57828403895261192c84835161182c565b98850198935090840190600101611914565b5091979650505050505050565b60a0808252865190820181905260009060209060c0840190828a01845b8281101561198d5781516001600160a01b031684529284019290840190600101611968565b505050838103828501526119a181896118bb565b91505082810360408401526119b681876118f6565b905082810360608401526119ca81866118f6565b905082810360808401526119de818561182c565b98975050505050505050565b6000602082840312156119fc57600080fd5b5051919050565b60006020808385031215611a1657600080fd5b825167ffffffffffffffff80821115611a2e57600080fd5b818501915085601f830112611a4257600080fd5b815181811115611a5457611a5461173a565b8060051b9150611a65848301611750565b8181529183018401918481019088841115611a7f57600080fd5b938501935b838510156119de57845192506001600160e01b031983168314611aa75760008081fd5b8282529385019390850190611a84565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b81811015611b0a5784516001600160e01b03191683529383019391830191600101611ae4565b5090979650505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611b4057611b40611b17565b92915050565b600060018201611b5857611b58611b17565b5060010190565b602080825282518282018190526000919060409081850190868401855b8281101561193e57815180516001600160a01b031685528601511515868501529284019290850190600101611b7c565b604080825283519082018190526000906020906060840190828701845b82811015611be857815160ff1684529284019290840190600101611bc9565b50505083810382850152611bfc81866118bb565b969550505050505056fe657865637574655061796c6f616428616464726573732c737472696e672c627974657329a26469706673582212206832fe340087bcff3d7487998e0ee2a7ac67a4be98d489d577405fa532d718db64736f6c63430008150033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806366760d7d11610097578063aa98df3911610066578063aa98df391461021b578063b788f3a11461022e578063bffa7f0f14610249578063cc025f7c1461026457600080fd5b806366760d7d146101bc5780636dc0ae22146101be5780637aadef8b146101d95780637e2f35fa1461020057600080fd5b80632861c7d1116100d35780632861c7d1146101635780632d2c55651461017e578063588c77e61461019957806361461954146101b457600080fd5b80630680f417146100fa5780630bc9136e1461013257806325ad7f4d14610148575b600080fd5b61011573a0d3707c569ff8c87fa923d3823ec5d81c98be7881565b6040516001600160a01b0390911681526020015b60405180910390f35b61013a602581565b604051908152602001610129565b610115739efde135ca4832abf0408c44c6f5f370eb0f35e881565b6101157352aa899454998be5b000ad077a46bbe360f4e49781565b6101157328849d2b63fa8d361e5fc15cb8abb13019884d0981565b610115735c43aac965ff230ac1cf63e924d0153291d78bad81565b6101bc61028b565b005b610115730204cd037b2ec03605cfdfe482d8e257c765fa1b81565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b61011573059a94a72951c0ae1cc1ce3bf0db52421bbe821081565b6101bc610229366004611781565b61031d565b610115734f6f977acdd1177dcd81ab83074855ecb9c2d49e81565b61011573a45f7bd6a5ff45d31aace6bcd3d426d9328cea0181565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102fb5760405162461bcd60e51b815260206004820152601060248201526f3737ba16bb30b634b216b1b0b63632b960811b60448201526064015b60405180910390fd5b6103036106d6565b61030b610dc6565b610313610f19565b61031b6112bb565b565b3373a45f7bd6a5ff45d31aace6bcd3d426d9328cea011480610352575033734f6f977acdd1177dcd81ab83074855ecb9c2d49e145b8061037057503073059a94a72951c0ae1cc1ce3bf0db52421bbe8210145b8061038e575030739efde135ca4832abf0408c44c6f5f370eb0f35e8145b80610397575060015b6103dc5760405162461bcd60e51b81526020600482015260166024820152751b5cd9cb9cd95b99195c8b5b9bdd0b585b1b1bddd95960521b60448201526064016102f2565b604080516001808252818301909252600090826020808301908036833701905050905060008267ffffffffffffffff81111561041a5761041a61173a565b604051908082528060200260200182016040528015610443578160200160208202803683370190505b50905060008367ffffffffffffffff8111156104615761046161173a565b60405190808252806020026020018201604052801561049457816020015b606081526020019060019003908161047f5790505b50905060008467ffffffffffffffff8111156104b2576104b261173a565b6040519080825280602002602001820160405280156104e557816020015b60608152602001906001900390816104d05790505b5090507f00000000000000000000000000000000000000000000000000000000000000008460008151811061051c5761051c611816565b60200260200101906001600160a01b031690816001600160a01b03168152505060008360008151811061055157610551611816565b602002602001018181525050604051806060016040528060248152602001611c07602491398260008151811061058957610589611816565b602090810291909101810191909152604080516000815291820181526105d2917f0000000000000000000000000000000000000000000000000000000000000000918101611872565b604051602081830303815290604052816000815181106105f4576105f4611816565b6020908102919091010152604051636d4ab48d60e11b8152600090730204cd037b2ec03605cfdfe482d8e257c765fa1b9063da95691a906106419088908890889088908e9060040161194b565b6020604051808303816000875af1158015610660573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068491906119ea565b9050602581146106cd5760405162461bcd60e51b815260206004820152601460248201527350524f504f53414c5f49535f4e4f545f53414d4560601b60448201526064016102f2565b50505050505050565b6040516311272db960e31b815273b290b44d34c4a44e233af73998c543832c41812060048201526000907352aa899454998be5b000ad077a46bbe360f4e497906389396dc890602401600060405180830381865afa15801561073c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107649190810190611a03565b60405163110bad1960e11b815273b290b44d34c4a44e233af73998c543832c41812060048201529091507352aa899454998be5b000ad077a46bbe360f4e497906322175a3290602401600060405180830381600087803b1580156107c757600080fd5b505af11580156107db573d6000803e3d6000fd5b50506040516378600da160e11b81527352aa899454998be5b000ad077a46bbe360f4e497925063f0c01b42915061082c90738ec5e29ea39b2f64b21e32cb9ff11d5059982f8c908590600401611ab7565b600060405180830381600087803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b50506040516311272db960e31b815273bdf3e6a0c721117b69150d00d9fb27873023e4df6004820152600093507352aa899454998be5b000ad077a46bbe360f4e49792506389396dc89150602401600060405180830381865afa1580156108c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ed9190810190611a03565b60405163110bad1960e11b815273bdf3e6a0c721117b69150d00d9fb27873023e4df60048201529091507352aa899454998be5b000ad077a46bbe360f4e497906322175a3290602401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b505050506000815160016109789190611b2d565b67ffffffffffffffff8111156109905761099061173a565b6040519080825280602002602001820160405280156109b9578160200160208202803683370190505b50905060005b8251811015610a1f578281815181106109da576109da611816565b60200260200101518282815181106109f4576109f4611816565b6001600160e01b03199092166020928302919091019091015280610a1781611b46565b9150506109bf565b50638f0c291660e01b81835181518110610a3b57610a3b611816565b6001600160e01b0319909216602092830291909101909101526040516378600da160e11b81527352aa899454998be5b000ad077a46bbe360f4e4979063f0c01b4290610aa19073c3800e7527145837e525cfa6ad96b6b5dae01586908590600401611ab7565b600060405180830381600087803b158015610abb57600080fd5b505af1158015610acf573d6000803e3d6000fd5b505060405163110bad1960e11b815273ad99e8416f505ace0a087c5dab7214f15ae3d1d160048201527352aa899454998be5b000ad077a46bbe360f4e49794506322175a3293506024019150610b229050565b600060405180830381600087803b158015610b3c57600080fd5b505af1158015610b50573d6000803e3d6000fd5b506000925060049150610b609050565b604051908082528060200260200182016040528015610b89578160200160208202803683370190505b5090506369b48e4e60e01b81600081518110610ba757610ba7611816565b6001600160e01b031990921660209283029190910190910152805163585f642360e11b9082906001908110610bde57610bde611816565b6001600160e01b031990921660209283029190910190910152805162bd047d60e51b9082906002908110610c1457610c14611816565b6001600160e01b0319909216602092830291909101909101528051638147c98960e01b9082906003908110610c4b57610c4b611816565b6001600160e01b0319909216602092830291909101909101526040516378600da160e11b81527352aa899454998be5b000ad077a46bbe360f4e4979063f0c01b4290610cb190739191b9539dd588db81076900defdd79cb1115f72908590600401611ab7565b600060405180830381600087803b158015610ccb57600080fd5b505af1158015610cdf573d6000803e3d6000fd5b505060405163c39aa07d60e01b815273a57d7cef617271f4cea4f665d33ebcfcba4929f660048201527352aa899454998be5b000ad077a46bbe360f4e497935063c39aa07d92506024019050600060405180830381600087803b158015610d4557600080fd5b505af1158015610d59573d6000803e3d6000fd5b505050507352aa899454998be5b000ad077a46bbe360f4e4976001600160a01b03166317a08fa06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610dac57600080fd5b505af1158015610dc0573d6000803e3d6000fd5b50505050565b60408051600280825260608201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610dde579050509050604051806040016040528073df10fe6163c1bfb99d7179e1bfc2e0bb6128704f6001600160a01b031681526020016000151581525081600081518110610e4f57610e4f611816565b6020026020010181905250604051806040016040528073b5af15a931da1b1a7b8dcf6e2cd31c8a3dd1e1346001600160a01b031681526020016001151581525081600181518110610ea257610ea2611816565b6020908102919091010152604051633f66feff60e01b81527352aa899454998be5b000ad077a46bbe360f4e49790633f66feff90610ee4908490600401611b5f565b600060405180830381600087803b158015610efe57600080fd5b505af1158015610f12573d6000803e3d6000fd5b5050505050565b6040805160018082528183019092526000916020808301908036833701905050905063648ae39b60e01b81600081518110610f5657610f56611816565b6001600160e01b031990921660209283029190910190910152610fa473a7dc9540f00358a7ca46780de2fdebd7f673c12773e8620e95b52ec1cd29da337519a43d8ffb07e82c836000611484565b50604080516000808252602082019092529050610fec737ee8b5c11b578dd1e8c02d641508a305281bd17373c1bddf4ca56358ed8899b50369c191adfb6ec75a836000611484565b5060408051600080825260208201909252905061103473871176c000603665ce1133c0aac783b79257e9c6737c44b02da7826f9e14264a8e2d48a92bb86f72ee836000611484565b5060408051600080825260208201909252905061107c734e05681632e1401a89335edab3e36612ae8e1d1e73807675e4d1ec7c1c134940ab513b288d150e8023836000611484565b50604080516001808252818301909252600091602080830190803683370190505090506371aec96860e01b816000815181106110ba576110ba611816565b6001600160e01b031990921660209283029190910190910152611108735b94f032799cc36ffd3e8ca9bcea2ba5af40d43e7342afc927e8ab5d14b2760625eb188158eefb46be836001611484565b50604080516000808252602082019092529050611150736a64a3e0af38279ac7455c85b2c683f5621ce2e7736aa752b1462e7c71aa90e9236a817263bb5e0c72836000611484565b50604080516000808252602082019092529050611198730f1679fb1d5b2981423c757e8ea91979fabdb2d173d23a760cd16610f67a68badc3c5e04e9898d2789836000611484565b5060408051600280825260608201835260009260208301908036833701905050905063072bb76960e01b816000815181106111d5576111d5611816565b6001600160e01b031990921660209283029190910190910152805163b63ddd4560e01b908290600190811061120c5761120c611816565b6001600160e01b03199092166020928302919091019091015261125a73645b137aca041b85c057a4a396086789cfd990417324d58fcfa6d74c5acc1e4b6814bf5703e1cdd8a8836000611484565b5060405163c39aa07d60e01b81527337b1af815f153cafcc6ba8f503abe05ae40099f0600482015273a0d3707c569ff8c87fa923d3823ec5d81c98be789063c39aa07d90602401600060405180830381600087803b158015610dac57600080fd5b73a0d3707c569ff8c87fa923d3823ec5d81c98be786001600160a01b031663648ae39b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561130a57600080fd5b505af115801561131e573d6000803e3d6000fd5b50600092506002915061132e9050565b604051908082528060200260200182016040528015611357578160200160208202803683370190505b50604080516002808252606082018352929350600092909160208301908036833701905050905060098260008151811061139357611393611816565b602002602001019060ff16908160ff1681525050620e7ef0816000815181106113be576113be611816565b602002602001018181525050600a826001815181106113df576113df611816565b602002602001019060ff16908160ff1681525050620e30d08160018151811061140a5761140a611816565b60209081029190910101526040516307ac73b360e31b815273a0d3707c569ff8c87fa923d3823ec5d81c98be7890633d639d989061144e9085908590600401611bac565b600060405180830381600087803b15801561146857600080fd5b505af115801561147c573d6000803e3d6000fd5b505050505050565b60606001600160a01b0385161580159061149c575081155b15611524576040516311272db960e31b81526001600160a01b038616600482015273a0d3707c569ff8c87fa923d3823ec5d81c98be78906389396dc890602401600060405180830381865afa1580156114f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115219190810190611a03565b90505b6000835182516115349190611b2d565b67ffffffffffffffff81111561154c5761154c61173a565b604051908082528060200260200182016040528015611575578160200160208202803683370190505b5090506000805b83518110156115e85783818151811061159757611597611816565b60200260200101518383806115ab90611b46565b9450815181106115bd576115bd611816565b6001600160e01b031990921660209283029190910190910152806115e081611b46565b91505061157c565b5060005b85518110156116585785818151811061160757611607611816565b602002602001015183838061161b90611b46565b94508151811061162d5761162d611816565b6001600160e01b0319909216602092830291909101909101528061165081611b46565b9150506115ec565b5060405163110bad1960e11b81526001600160a01b038816600482015273a0d3707c569ff8c87fa923d3823ec5d81c98be78906322175a3290602401600060405180830381600087803b1580156116ae57600080fd5b505af11580156116c2573d6000803e3d6000fd5b50506040516378600da160e11b815273a0d3707c569ff8c87fa923d3823ec5d81c98be78925063f0c01b4291506116ff9089908690600401611ab7565b600060405180830381600087803b15801561171957600080fd5b505af115801561172d573d6000803e3d6000fd5b5050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117795761177961173a565b604052919050565b6000602080838503121561179457600080fd5b823567ffffffffffffffff808211156117ac57600080fd5b818501915085601f8301126117c057600080fd5b8135818111156117d2576117d261173a565b6117e4601f8201601f19168501611750565b915080825286848285010111156117fa57600080fd5b8084840185840137600090820190930192909252509392505050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561185257602081850181015186830182015201611836565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038316815260606020820152600960608201526865786563757465282960b81b608082015260a0604082015260006118b360a083018461182c565b949350505050565b600081518084526020808501945080840160005b838110156118eb578151875295820195908201906001016118cf565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561193e57828403895261192c84835161182c565b98850198935090840190600101611914565b5091979650505050505050565b60a0808252865190820181905260009060209060c0840190828a01845b8281101561198d5781516001600160a01b031684529284019290840190600101611968565b505050838103828501526119a181896118bb565b91505082810360408401526119b681876118f6565b905082810360608401526119ca81866118f6565b905082810360808401526119de818561182c565b98975050505050505050565b6000602082840312156119fc57600080fd5b5051919050565b60006020808385031215611a1657600080fd5b825167ffffffffffffffff80821115611a2e57600080fd5b818501915085601f830112611a4257600080fd5b815181811115611a5457611a5461173a565b8060051b9150611a65848301611750565b8181529183018401918481019088841115611a7f57600080fd5b938501935b838510156119de57845192506001600160e01b031983168314611aa75760008081fd5b8282529385019390850190611a84565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b81811015611b0a5784516001600160e01b03191683529383019391830191600101611ae4565b5090979650505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611b4057611b40611b17565b92915050565b600060018201611b5857611b58611b17565b5060010190565b602080825282518282018190526000919060409081850190868401855b8281101561193e57815180516001600160a01b031685528601511515868501529284019290850190600101611b7c565b604080825283519082018190526000906020906060840190828701845b82811015611be857815160ff1684529284019290840190600101611bc9565b50505083810382850152611bfc81866118bb565b969550505050505056fe657865637574655061796c6f616428616464726573732c737472696e672c627974657329a26469706673582212206832fe340087bcff3d7487998e0ee2a7ac67a4be98d489d577405fa532d718db64736f6c63430008150033","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ADDRESS_THIS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERNOR","outputs":[{"internalType":"contract IGovernorBravo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LIQUIDITY","outputs":[{"internalType":"contract IFluidLiquidityAdmin","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LITE","outputs":[{"internalType":"contract ILite","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSAL_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG_2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG_3","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TEAM_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TIMELOCK","outputs":[{"internalType":"contract ITimelock","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY","outputs":[{"internalType":"contract IDSAV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"verifyProposal","outputs":[],"stateMutability":"view","type":"function"}]}