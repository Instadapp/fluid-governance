{"metadata":"{\"defaultCompiler\":{\"version\":\"0.7.3\"},\"sources\":{\"contracts/payloads/IGP28/PayloadIGP28.sol\":{\"content\":\"pragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IGovernorBravo {\\n    function _acceptAdmin() external;\\n\\n    function _setVotingDelay(uint newVotingDelay) external;\\n\\n    function _setVotingPeriod(uint newVotingPeriod) external;\\n\\n    function _acceptAdminOnTimelock() external;\\n\\n    function _setImplementation(address implementation_) external;\\n\\n    function propose(\\n        address[] memory targets,\\n        uint[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) external returns (uint);\\n\\n    function admin() external view returns (address);\\n\\n    function pendingAdmin() external view returns (address);\\n\\n    function timelock() external view returns (address);\\n\\n    function votingDelay() external view returns (uint256);\\n\\n    function votingPeriod() external view returns (uint256);\\n}\\n\\ninterface ITimelock {\\n    function acceptAdmin() external;\\n\\n    function setDelay(uint delay_) external;\\n\\n    function setPendingAdmin(address pendingAdmin_) external;\\n\\n    function queueTransaction(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta\\n    ) external returns (bytes32);\\n\\n    function executeTransaction(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta\\n    ) external payable returns (bytes memory);\\n\\n    function pendingAdmin() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function delay() external view returns (uint256);\\n}\\n\\ninterface AdminModuleStructs {\\n    struct AddressBool {\\n        address addr;\\n        bool value;\\n    }\\n\\n    struct AddressUint256 {\\n        address addr;\\n        uint256 value;\\n    }\\n\\n    struct RateDataV1Params {\\n        address token;\\n        uint256 kink;\\n        uint256 rateAtUtilizationZero;\\n        uint256 rateAtUtilizationKink;\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    struct RateDataV2Params {\\n        address token;\\n        uint256 kink1;\\n        uint256 kink2;\\n        uint256 rateAtUtilizationZero;\\n        uint256 rateAtUtilizationKink1;\\n        uint256 rateAtUtilizationKink2;\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    struct TokenConfig {\\n        address token;\\n        uint256 fee;\\n        uint256 threshold;\\n        uint256 maxUtilization;\\n    }\\n\\n    struct UserSupplyConfig {\\n        address user;\\n        address token;\\n        uint8 mode;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseWithdrawalLimit;\\n    }\\n\\n    struct UserBorrowConfig {\\n        address user;\\n        address token;\\n        uint8 mode;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseDebtCeiling;\\n        uint256 maxDebtCeiling;\\n    }\\n}\\n\\ninterface IProxy {\\n    function setAdmin(address newAdmin_) external;\\n\\n    function setDummyImplementation(address newDummyImplementation_) external;\\n\\n    function addImplementation(\\n        address implementation_,\\n        bytes4[] calldata sigs_\\n    ) external;\\n\\n    function removeImplementation(address implementation_) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function getDummyImplementation() external view returns (address);\\n\\n    function getImplementationSigs(\\n        address impl_\\n    ) external view returns (bytes4[] memory);\\n\\n    function getSigsImplementation(bytes4 sig_) external view returns (address);\\n\\n    function readFromStorage(\\n        bytes32 slot_\\n    ) external view returns (uint256 result_);\\n}\\n\\ninterface IFluidLiquidityAdmin {\\n    /// @notice adds/removes auths. Auths generally could be contracts which can have restricted actions defined on contract.\\n    ///         auths can be helpful in reducing governance overhead where it's not needed.\\n    /// @param authsStatus_ array of structs setting allowed status for an address.\\n    ///                     status true => add auth, false => remove auth\\n    function updateAuths(\\n        AdminModuleStructs.AddressBool[] calldata authsStatus_\\n    ) external;\\n\\n    /// @notice adds/removes guardians. Only callable by Governance.\\n    /// @param guardiansStatus_ array of structs setting allowed status for an address.\\n    ///                         status true => add guardian, false => remove guardian\\n    function updateGuardians(\\n        AdminModuleStructs.AddressBool[] calldata guardiansStatus_\\n    ) external;\\n\\n    /// @notice changes the revenue collector address (contract that is sent revenue). Only callable by Governance.\\n    /// @param revenueCollector_  new revenue collector address\\n    function updateRevenueCollector(address revenueCollector_) external;\\n\\n    /// @notice changes current status, e.g. for pausing or unpausing all user operations. Only callable by Auths.\\n    /// @param newStatus_ new status\\n    ///        status = 2 -> pause, status = 1 -> resume.\\n    function changeStatus(uint256 newStatus_) external;\\n\\n    /// @notice                  update tokens rate data version 1. Only callable by Auths.\\n    /// @param tokensRateData_   array of RateDataV1Params with rate data to set for each token\\n    function updateRateDataV1s(\\n        AdminModuleStructs.RateDataV1Params[] calldata tokensRateData_\\n    ) external;\\n\\n    /// @notice                  update tokens rate data version 2. Only callable by Auths.\\n    /// @param tokensRateData_   array of RateDataV2Params with rate data to set for each token\\n    function updateRateDataV2s(\\n        AdminModuleStructs.RateDataV2Params[] calldata tokensRateData_\\n    ) external;\\n\\n    /// @notice updates token configs: fee charge on borrowers interest & storage update utilization threshold.\\n    ///         Only callable by Auths.\\n    /// @param tokenConfigs_ contains token address, fee & utilization threshold\\n    function updateTokenConfigs(\\n        AdminModuleStructs.TokenConfig[] calldata tokenConfigs_\\n    ) external;\\n\\n    /// @notice updates user classes: 0 is for new protocols, 1 is for established protocols.\\n    ///         Only callable by Auths.\\n    /// @param userClasses_ struct array of uint256 value to assign for each user address\\n    function updateUserClasses(\\n        AdminModuleStructs.AddressUint256[] calldata userClasses_\\n    ) external;\\n\\n    /// @notice sets user supply configs per token basis. Eg: with interest or interest-free and automated limits.\\n    ///         Only callable by Auths.\\n    /// @param userSupplyConfigs_ struct array containing user supply config, see `UserSupplyConfig` struct for more info\\n    function updateUserSupplyConfigs(\\n        AdminModuleStructs.UserSupplyConfig[] memory userSupplyConfigs_\\n    ) external;\\n\\n    /// @notice setting user borrow configs per token basis. Eg: with interest or interest-free and automated limits.\\n    ///         Only callable by Auths.\\n    /// @param userBorrowConfigs_ struct array containing user borrow config, see `UserBorrowConfig` struct for more info\\n    function updateUserBorrowConfigs(\\n        AdminModuleStructs.UserBorrowConfig[] memory userBorrowConfigs_\\n    ) external;\\n\\n    /// @notice pause operations for a particular user in class 0 (class 1 users can't be paused by guardians).\\n    /// Only callable by Guardians.\\n    /// @param user_          address of user to pause operations for\\n    /// @param supplyTokens_  token addresses to pause withdrawals for\\n    /// @param borrowTokens_  token addresses to pause borrowings for\\n    function pauseUser(\\n        address user_,\\n        address[] calldata supplyTokens_,\\n        address[] calldata borrowTokens_\\n    ) external;\\n\\n    /// @notice unpause operations for a particular user in class 0 (class 1 users can't be paused by guardians).\\n    /// Only callable by Guardians.\\n    /// @param user_          address of user to unpause operations for\\n    /// @param supplyTokens_  token addresses to unpause withdrawals for\\n    /// @param borrowTokens_  token addresses to unpause borrowings for\\n    function unpauseUser(\\n        address user_,\\n        address[] calldata supplyTokens_,\\n        address[] calldata borrowTokens_\\n    ) external;\\n\\n    /// @notice         collects revenue for tokens to configured revenueCollector address.\\n    /// @param tokens_  array of tokens to collect revenue for\\n    /// @dev            Note that this can revert if token balance is < revenueAmount (utilization > 100%)\\n    function collectRevenue(address[] calldata tokens_) external;\\n\\n    /// @notice gets the current updated exchange prices for n tokens and updates all prices, rates related data in storage.\\n    /// @param tokens_ tokens to update exchange prices for\\n    /// @return supplyExchangePrices_ new supply rates of overall system for each token\\n    /// @return borrowExchangePrices_ new borrow rates of overall system for each token\\n    function updateExchangePrices(\\n        address[] calldata tokens_\\n    )\\n        external\\n        returns (\\n            uint256[] memory supplyExchangePrices_,\\n            uint256[] memory borrowExchangePrices_\\n        );\\n}\\n\\ncontract PayloadIGP28 {\\n    uint256 public constant PROPOSAL_ID = 28;\\n\\n    address public constant PROPOSER =\\n        0xA45f7bD6A5Ff45D31aaCE6bCD3d426D9328cea01;\\n\\n    address public constant PROPOSER_AVO_MULTISIG =\\n        0x059A94A72951c0ae1cc1CE3BF0dB52421bbE8210;\\n\\n    address public constant PROPOSER_AVO_MULTISIG_2 =\\n        0x9efdE135CA4832AbF0408c44c6f5f370eB0f35e8;\\n\\n    IGovernorBravo public constant GOVERNOR =\\n        IGovernorBravo(0x0204Cd037B2ec03605CFdFe482D8e257C765fA1B);\\n    ITimelock public immutable TIMELOCK =\\n        ITimelock(0x2386DC45AdDed673317eF068992F19421B481F4c);\\n\\n    address public immutable ADDRESS_THIS;\\n\\n    address public constant TEAM_MULTISIG =\\n        0x4F6F977aCDD1177DCD81aB83074855EcB9C2D49e;\\n\\n    IFluidLiquidityAdmin public constant LIQUIDITY =\\n        IFluidLiquidityAdmin(0x52Aa899454998Be5b000Ad077a46Bbe360F4e497);\\n\\n    address public constant ETH_ADDRESS =\\n        0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n    address public constant wstETH_ADDRESS =\\n        0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0;\\n    address public constant weETH_ADDRESS =\\n        0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee;\\n\\n    address public constant sUSDe_ADDRESS =\\n        0x9D39A5DE30e57443BfF2A8307A4256c8797A3497;\\n    address public constant USDC_ADDRESS =\\n        0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\\n    address public constant USDT_ADDRESS =\\n        0xdAC17F958D2ee523a2206206994597C13D831ec7;\\n\\n    constructor() {\\n        ADDRESS_THIS = address(this);\\n    }\\n\\n    function propose(string memory description) external {\\n        require(\\n            msg.sender == PROPOSER ||\\n                msg.sender == TEAM_MULTISIG ||\\n                address(this) == PROPOSER_AVO_MULTISIG ||\\n                address(this) == PROPOSER_AVO_MULTISIG_2,\\n            \\\"msg.sender-not-allowed\\\"\\n        );\\n\\n        uint256 totalActions = 1;\\n        address[] memory targets = new address[](totalActions);\\n        uint256[] memory values = new uint256[](totalActions);\\n        string[] memory signatures = new string[](totalActions);\\n        bytes[] memory calldatas = new bytes[](totalActions);\\n\\n        // Action 1: call executePayload on timelock contract to execute payload related to Fluid\\n        targets[0] = address(TIMELOCK);\\n        values[0] = 0;\\n        signatures[0] = \\\"executePayload(address,string,bytes)\\\";\\n        calldatas[0] = abi.encode(ADDRESS_THIS, \\\"execute()\\\", abi.encode());\\n\\n        uint256 proposedId = GOVERNOR.propose(\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            description\\n        );\\n\\n        require(proposedId == PROPOSAL_ID, \\\"PROPOSAL_IS_NOT_SAME\\\");\\n    }\\n\\n    function execute() external {\\n        require(address(this) == address(TIMELOCK), \\\"not-valid-caller\\\");\\n\\n        // Action 1: Update USDC, USDT & wstETH market rate curve.\\n        action1();\\n    }\\n\\n    function verifyProposal() external view {}\\n\\n    /***********************************|\\n    |     Proposal Payload Actions      |\\n    |__________________________________*/\\n\\n    /// @notice Action 1: Update USDC, USDT & wstETH market rate curve.\\n    function action1() internal {\\n        {\\n            AdminModuleStructs.RateDataV1Params[]\\n                memory paramsV1_ = new AdminModuleStructs.RateDataV1Params[](2);\\n\\n            paramsV1_[0] = AdminModuleStructs.RateDataV1Params({\\n                token: USDC_ADDRESS, // USDC\\n                kink: 93 * 1e2, // 93%\\n                rateAtUtilizationZero: 0, // 0%\\n                rateAtUtilizationKink: 12 * 1e2, // 12%\\n                rateAtUtilizationMax: 25 * 1e2 // 25%\\n            });\\n\\n            paramsV1_[1] = AdminModuleStructs.RateDataV1Params({\\n                token: USDT_ADDRESS, // USDT\\n                kink: 93 * 1e2, // 93%\\n                rateAtUtilizationZero: 0, // 0%\\n                rateAtUtilizationKink: 12 * 1e2, // 12%\\n                rateAtUtilizationMax: 25 * 1e2 // 25%\\n            });\\n\\n            LIQUIDITY.updateRateDataV1s(paramsV1_);\\n        }\\n\\n        {\\n            AdminModuleStructs.RateDataV2Params[]\\n                memory paramsV2_ = new AdminModuleStructs.RateDataV2Params[](1);\\n\\n            paramsV2_[0] = AdminModuleStructs.RateDataV2Params({\\n                token: wstETH_ADDRESS, // wstETH\\n                kink1: 50 * 1e2, // 50%\\n                kink2: 90 * 1e2, // 90%\\n                rateAtUtilizationZero: 0, // 0%\\n                rateAtUtilizationKink1: 10 * 1e2, // 10%\\n                rateAtUtilizationKink2: 10 * 1e2, // 10%\\n                rateAtUtilizationMax: 100 * 1e2 // 100%\\n            });\\n\\n            LIQUIDITY.updateRateDataV2s(paramsV2_);\\n        }\\n\\n    }\\n}\\n\",\"versionPragma\":\"^0.7.0\"}}}","address":"0x34dE9424bE329Fa6ef2fAA5c9bB9039C8aFCc1E1","bytecode":"0x60c06040527f2386dc45added673317ef068992f19421b481f4c00000000000000000000000060805234801561003457600080fd5b5030606081811b60a052608051901c90610ebb6100706000398061053652806106bd52508061021b528061028552806104875250610ebb6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a734f06e116100a2578063bb09d9b711610071578063bb09d9b7146101b3578063bffa7f0f146101bb578063c1892058146101c3578063cc025f7c146101cb578063dca95fbf146101d357610116565b8063a734f06e14610188578063aa98df3914610190578063aaff0493146101a3578063b788f3a1146101ab57610116565b806366760d7d116100e957806366760d7d146101605780636dc0ae22146101685780637aadef8b146101705780637e2f35fa14610178578063a44855981461018057610116565b80630bc9136e1461011b57806325ad7f4d146101395780632861c7d11461014e5780636146195414610156575b600080fd5b6101236101db565b6040516101309190610e58565b60405180910390f35b6101416101e0565b6040516101309190610bdf565b6101416101f8565b61015e610210565b005b61015e610269565b61014161026b565b610141610283565b6101416102a7565b6101416102bf565b6101416102d7565b61015e61019e366004610a0e565b6102ef565b610141610643565b61014161065b565b610141610673565b61014161068b565b6101416106a3565b6101416106bb565b6101416106df565b601c81565b739efde135ca4832abf0408c44c6f5f370eb0f35e881565b7352aa899454998be5b000ad077a46bbe360f4e49781565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102615760405162461bcd60e51b815260040161025890610e2e565b60405180910390fd5b6102696106f7565b565b730204cd037b2ec03605cfdfe482d8e257c765fa1b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b73059a94a72951c0ae1cc1ce3bf0db52421bbe821081565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca081565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b3373a45f7bd6a5ff45d31aace6bcd3d426d9328cea011480610324575033734f6f977acdd1177dcd81ab83074855ecb9c2d49e145b8061034257503073059a94a72951c0ae1cc1ce3bf0db52421bbe8210145b80610360575030739efde135ca4832abf0408c44c6f5f370eb0f35e8145b61037c5760405162461bcd60e51b815260040161025890610dd0565b604080516001808252818301909252606090826020808301908036833701905050905060608267ffffffffffffffff811180156103b857600080fd5b506040519080825280602002602001820160405280156103e2578160200160208202803683370190505b50905060608367ffffffffffffffff811180156103fe57600080fd5b5060405190808252806020026020018201604052801561043257816020015b606081526020019060019003908161041d5790505b50905060608467ffffffffffffffff8111801561044e57600080fd5b5060405190808252806020026020018201604052801561048257816020015b606081526020019060019003908161046d5790505b5090507f0000000000000000000000000000000000000000000000000000000000000000846000815181106104b357fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506000836000815181106104e257fe5b602002602001018181525050604051806060016040528060248152602001610e62602491398260008151811061051457fe5b6020908102919091018101919091526040805160008152918201815261055d917f0000000000000000000000000000000000000000000000000000000000000000918101610bf3565b6040516020818303038152906040528160008151811061057957fe5b6020908102919091010152604051636d4ab48d60e11b8152600090730204cd037b2ec03605cfdfe482d8e257c765fa1b9063da95691a906105c69088908890889088908e90600401610c3c565b602060405180830381600087803b1580156105e057600080fd5b505af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610aa3565b9050601c811461063a5760405162461bcd60e51b815260040161025890610e00565b50505050505050565b73cd5fe23c85820f7b72d0926fc9b05b43e359b7ee81565b734f6f977acdd1177dcd81ab83074855ecb9c2d49e81565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b73a45f7bd6a5ff45d31aace6bcd3d426d9328cea0181565b73dac17f958d2ee523a2206206994597c13d831ec781565b7f000000000000000000000000000000000000000000000000000000000000000081565b739d39a5de30e57443bff2a8307a4256c8797a349781565b6040805160028082526060828101909352816020015b610715610990565b81526020019060019003908161070d5790505090506040518060a0016040528073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486001600160a01b031681526020016124548152602001600081526020016104b081526020016109c48152508160008151811061078257fe5b60200260200101819052506040518060a0016040528073dac17f958d2ee523a2206206994597c13d831ec76001600160a01b031681526020016124548152602001600081526020016104b081526020016109c4815250816001815181106107e557fe5b6020908102919091010152604051630feb5dff60e21b81527352aa899454998be5b000ad077a46bbe360f4e49790633fad77fc90610827908490600401610cdb565b600060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b50505050506060600167ffffffffffffffff8111801561087457600080fd5b506040519080825280602002602001820160405280156108ae57816020015b61089b6109c8565b8152602001906001900390816108935790505b5090506040518060e00160405280737f39c581f595b53c5cb19bd0b3f8da6c935e2ca06001600160a01b0316815260200161138881526020016123288152602001600081526020016103e881526020016103e881526020016127108152508160008151811061091957fe5b6020908102919091010152604051639dde597760e01b81527352aa899454998be5b000ad077a46bbe360f4e49790639dde59779061095b908490600401610d52565b600060405180830381600087803b15801561097557600080fd5b505af1158015610989573d6000803e3d6000fd5b5050505050565b6040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006020808385031215610a20578182fd5b823567ffffffffffffffff80821115610a37578384fd5b818501915085601f830112610a4a578384fd5b813581811115610a5657fe5b604051601f8201601f1916810185018381118282101715610a7357fe5b6040528181528382018501881015610a89578586fd5b818585018683013790810190930193909352509392505050565b600060208284031215610ab4578081fd5b5051919050565b60008282518085526020808601955080818302840101818601855b84811015610b0457601f19868403018952610af2838351610b94565b98840198925090830190600101610ad6565b5090979650505050505050565b60008282518085526020808601955080818302840101818601855b84811015610b0457601f19868403018952610b48838351610b94565b98840198925090830190600101610b2c565b6000815180845260208085019450808401835b83811015610b8957815187529582019590820190600101610b6d565b509495945050505050565b60008151808452815b81811015610bb957602081850181015186830182015201610b9d565b81811115610bca5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b600060018060a01b038416825260606020830152600960608301526865786563757465282960b81b608083015260a06040830152610c3460a0830184610b94565b949350505050565b60a0808252865190820181905260009060209060c0840190828a01845b82811015610c7e5781516001600160a01b031684529284019290840190600101610c59565b50505083810382850152610c928189610b5a565b9150508281036040840152610ca78187610b11565b90508281036060840152610cbb8186610abb565b90508281036080840152610ccf8185610b94565b98975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015610d4557815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101610cf8565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015610d4557815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e09093019290850190600101610d6f565b6020808252601690820152751b5cd9cb9cd95b99195c8b5b9bdd0b585b1b1bddd95960521b604082015260600190565b60208082526014908201527350524f504f53414c5f49535f4e4f545f53414d4560601b604082015260600190565b60208082526010908201526f3737ba16bb30b634b216b1b0b63632b960811b604082015260600190565b9081526020019056fe657865637574655061796c6f616428616464726573732c737472696e672c627974657329a264697066735822122006d0918d510535f2ea28f671dcb4d12bfe268b6587139ce9f52aaca08418551164736f6c63430007030033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101165760003560e01c8063a734f06e116100a2578063bb09d9b711610071578063bb09d9b7146101b3578063bffa7f0f146101bb578063c1892058146101c3578063cc025f7c146101cb578063dca95fbf146101d357610116565b8063a734f06e14610188578063aa98df3914610190578063aaff0493146101a3578063b788f3a1146101ab57610116565b806366760d7d116100e957806366760d7d146101605780636dc0ae22146101685780637aadef8b146101705780637e2f35fa14610178578063a44855981461018057610116565b80630bc9136e1461011b57806325ad7f4d146101395780632861c7d11461014e5780636146195414610156575b600080fd5b6101236101db565b6040516101309190610e58565b60405180910390f35b6101416101e0565b6040516101309190610bdf565b6101416101f8565b61015e610210565b005b61015e610269565b61014161026b565b610141610283565b6101416102a7565b6101416102bf565b6101416102d7565b61015e61019e366004610a0e565b6102ef565b610141610643565b61014161065b565b610141610673565b61014161068b565b6101416106a3565b6101416106bb565b6101416106df565b601c81565b739efde135ca4832abf0408c44c6f5f370eb0f35e881565b7352aa899454998be5b000ad077a46bbe360f4e49781565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102615760405162461bcd60e51b815260040161025890610e2e565b60405180910390fd5b6102696106f7565b565b730204cd037b2ec03605cfdfe482d8e257c765fa1b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b73059a94a72951c0ae1cc1ce3bf0db52421bbe821081565b737f39c581f595b53c5cb19bd0b3f8da6c935e2ca081565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b3373a45f7bd6a5ff45d31aace6bcd3d426d9328cea011480610324575033734f6f977acdd1177dcd81ab83074855ecb9c2d49e145b8061034257503073059a94a72951c0ae1cc1ce3bf0db52421bbe8210145b80610360575030739efde135ca4832abf0408c44c6f5f370eb0f35e8145b61037c5760405162461bcd60e51b815260040161025890610dd0565b604080516001808252818301909252606090826020808301908036833701905050905060608267ffffffffffffffff811180156103b857600080fd5b506040519080825280602002602001820160405280156103e2578160200160208202803683370190505b50905060608367ffffffffffffffff811180156103fe57600080fd5b5060405190808252806020026020018201604052801561043257816020015b606081526020019060019003908161041d5790505b50905060608467ffffffffffffffff8111801561044e57600080fd5b5060405190808252806020026020018201604052801561048257816020015b606081526020019060019003908161046d5790505b5090507f0000000000000000000000000000000000000000000000000000000000000000846000815181106104b357fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506000836000815181106104e257fe5b602002602001018181525050604051806060016040528060248152602001610e62602491398260008151811061051457fe5b6020908102919091018101919091526040805160008152918201815261055d917f0000000000000000000000000000000000000000000000000000000000000000918101610bf3565b6040516020818303038152906040528160008151811061057957fe5b6020908102919091010152604051636d4ab48d60e11b8152600090730204cd037b2ec03605cfdfe482d8e257c765fa1b9063da95691a906105c69088908890889088908e90600401610c3c565b602060405180830381600087803b1580156105e057600080fd5b505af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610aa3565b9050601c811461063a5760405162461bcd60e51b815260040161025890610e00565b50505050505050565b73cd5fe23c85820f7b72d0926fc9b05b43e359b7ee81565b734f6f977acdd1177dcd81ab83074855ecb9c2d49e81565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b73a45f7bd6a5ff45d31aace6bcd3d426d9328cea0181565b73dac17f958d2ee523a2206206994597c13d831ec781565b7f000000000000000000000000000000000000000000000000000000000000000081565b739d39a5de30e57443bff2a8307a4256c8797a349781565b6040805160028082526060828101909352816020015b610715610990565b81526020019060019003908161070d5790505090506040518060a0016040528073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486001600160a01b031681526020016124548152602001600081526020016104b081526020016109c48152508160008151811061078257fe5b60200260200101819052506040518060a0016040528073dac17f958d2ee523a2206206994597c13d831ec76001600160a01b031681526020016124548152602001600081526020016104b081526020016109c4815250816001815181106107e557fe5b6020908102919091010152604051630feb5dff60e21b81527352aa899454998be5b000ad077a46bbe360f4e49790633fad77fc90610827908490600401610cdb565b600060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b50505050506060600167ffffffffffffffff8111801561087457600080fd5b506040519080825280602002602001820160405280156108ae57816020015b61089b6109c8565b8152602001906001900390816108935790505b5090506040518060e00160405280737f39c581f595b53c5cb19bd0b3f8da6c935e2ca06001600160a01b0316815260200161138881526020016123288152602001600081526020016103e881526020016103e881526020016127108152508160008151811061091957fe5b6020908102919091010152604051639dde597760e01b81527352aa899454998be5b000ad077a46bbe360f4e49790639dde59779061095b908490600401610d52565b600060405180830381600087803b15801561097557600080fd5b505af1158015610989573d6000803e3d6000fd5b5050505050565b6040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006020808385031215610a20578182fd5b823567ffffffffffffffff80821115610a37578384fd5b818501915085601f830112610a4a578384fd5b813581811115610a5657fe5b604051601f8201601f1916810185018381118282101715610a7357fe5b6040528181528382018501881015610a89578586fd5b818585018683013790810190930193909352509392505050565b600060208284031215610ab4578081fd5b5051919050565b60008282518085526020808601955080818302840101818601855b84811015610b0457601f19868403018952610af2838351610b94565b98840198925090830190600101610ad6565b5090979650505050505050565b60008282518085526020808601955080818302840101818601855b84811015610b0457601f19868403018952610b48838351610b94565b98840198925090830190600101610b2c565b6000815180845260208085019450808401835b83811015610b8957815187529582019590820190600101610b6d565b509495945050505050565b60008151808452815b81811015610bb957602081850181015186830182015201610b9d565b81811115610bca5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b600060018060a01b038416825260606020830152600960608301526865786563757465282960b81b608083015260a06040830152610c3460a0830184610b94565b949350505050565b60a0808252865190820181905260009060209060c0840190828a01845b82811015610c7e5781516001600160a01b031684529284019290840190600101610c59565b50505083810382850152610c928189610b5a565b9150508281036040840152610ca78187610b11565b90508281036060840152610cbb8186610abb565b90508281036080840152610ccf8185610b94565b98975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015610d4557815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101610cf8565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015610d4557815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e09093019290850190600101610d6f565b6020808252601690820152751b5cd9cb9cd95b99195c8b5b9bdd0b585b1b1bddd95960521b604082015260600190565b60208082526014908201527350524f504f53414c5f49535f4e4f545f53414d4560601b604082015260600190565b60208082526010908201526f3737ba16bb30b634b216b1b0b63632b960811b604082015260600190565b9081526020019056fe657865637574655061796c6f616428616464726573732c737472696e672c627974657329a264697066735822122006d0918d510535f2ea28f671dcb4d12bfe268b6587139ce9f52aaca08418551164736f6c63430007030033","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ADDRESS_THIS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERNOR","outputs":[{"internalType":"contract IGovernorBravo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LIQUIDITY","outputs":[{"internalType":"contract IFluidLiquidityAdmin","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSAL_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG_2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TEAM_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TIMELOCK","outputs":[{"internalType":"contract ITimelock","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDT_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sUSDe_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyProposal","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wstETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]}