{"metadata":"{\"defaultCompiler\":{\"version\":\"0.7.3\"},\"sources\":{\"contracts/payloads/IGP34/PayloadIGP34.sol\":{\"content\":\"pragma solidity >=0.7.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IGovernorBravo {\\n    function _acceptAdmin() external;\\n\\n    function _setVotingDelay(uint newVotingDelay) external;\\n\\n    function _setVotingPeriod(uint newVotingPeriod) external;\\n\\n    function _acceptAdminOnTimelock() external;\\n\\n    function _setImplementation(address implementation_) external;\\n\\n    function propose(\\n        address[] memory targets,\\n        uint[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) external returns (uint);\\n\\n    function admin() external view returns (address);\\n\\n    function pendingAdmin() external view returns (address);\\n\\n    function timelock() external view returns (address);\\n\\n    function votingDelay() external view returns (uint256);\\n\\n    function votingPeriod() external view returns (uint256);\\n}\\n\\ninterface ITimelock {\\n    function acceptAdmin() external;\\n\\n    function setDelay(uint delay_) external;\\n\\n    function setPendingAdmin(address pendingAdmin_) external;\\n\\n    function queueTransaction(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta\\n    ) external returns (bytes32);\\n\\n    function executeTransaction(\\n        address target,\\n        uint value,\\n        string memory signature,\\n        bytes memory data,\\n        uint eta\\n    ) external payable returns (bytes memory);\\n\\n    function pendingAdmin() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function delay() external view returns (uint256);\\n}\\n\\ninterface AdminModuleStructs {\\n    struct AddressBool {\\n        address addr;\\n        bool value;\\n    }\\n\\n    struct AddressUint256 {\\n        address addr;\\n        uint256 value;\\n    }\\n\\n    struct RateDataV1Params {\\n        address token;\\n        uint256 kink;\\n        uint256 rateAtUtilizationZero;\\n        uint256 rateAtUtilizationKink;\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    struct RateDataV2Params {\\n        address token;\\n        uint256 kink1;\\n        uint256 kink2;\\n        uint256 rateAtUtilizationZero;\\n        uint256 rateAtUtilizationKink1;\\n        uint256 rateAtUtilizationKink2;\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    struct TokenConfig {\\n        address token;\\n        uint256 fee;\\n        uint256 threshold;\\n        uint256 maxUtilization;\\n    }\\n\\n    struct UserSupplyConfig {\\n        address user;\\n        address token;\\n        uint8 mode;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseWithdrawalLimit;\\n    }\\n\\n    struct UserBorrowConfig {\\n        address user;\\n        address token;\\n        uint8 mode;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseDebtCeiling;\\n        uint256 maxDebtCeiling;\\n    }\\n}\\n\\ninterface IFluidVaultT1 {\\n    /// @notice updates the Vault oracle to `newOracle_`. Must implement the FluidOracle interface.\\n    function updateOracle(address newOracle_) external;\\n\\n    /// @notice updates the all Vault core settings according to input params.\\n    /// All input values are expected in 1e2 (1% = 100, 100% = 10_000).\\n    function updateCoreSettings(\\n        uint256 supplyRateMagnifier_,\\n        uint256 borrowRateMagnifier_,\\n        uint256 collateralFactor_,\\n        uint256 liquidationThreshold_,\\n        uint256 liquidationMaxLimit_,\\n        uint256 withdrawGap_,\\n        uint256 liquidationPenalty_,\\n        uint256 borrowFee_\\n    ) external;\\n\\n    /// @notice updates the allowed rebalancer to `newRebalancer_`.\\n    function updateRebalancer(address newRebalancer_) external;\\n\\n    /// @notice updates the supply rate magnifier to `supplyRateMagnifier_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateSupplyRateMagnifier(uint supplyRateMagnifier_) external;\\n\\n    /// @notice updates the collateral factor to `collateralFactor_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateCollateralFactor(uint collateralFactor_) external;\\n\\n    /// @notice updates the liquidation threshold to `liquidationThreshold_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateLiquidationThreshold(uint liquidationThreshold_) external;\\n\\n    /// @notice updates the liquidation max limit to `liquidationMaxLimit_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateLiquidationMaxLimit(uint liquidationMaxLimit_) external;\\n\\n    /// @notice updates the withdrawal gap to `withdrawGap_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateWithdrawGap(uint withdrawGap_) external;\\n\\n    /// @notice updates the liquidation penalty to `liquidationPenalty_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateLiquidationPenalty(uint liquidationPenalty_) external;\\n\\n    /// @notice updates the borrow fee to `borrowFee_`. Input in 1e2 (1% = 100, 100% = 10_000).\\n    function updateBorrowFee(uint borrowFee_) external;\\n}\\n\\n interface IProxy {\\n    function setAdmin(address newAdmin_) external;\\n\\n    function setDummyImplementation(address newDummyImplementation_) external;\\n\\n    function addImplementation(\\n        address implementation_,\\n        bytes4[] calldata sigs_\\n    ) external;\\n\\n    function removeImplementation(address implementation_) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function getDummyImplementation() external view returns (address);\\n\\n    function getImplementationSigs(\\n        address impl_\\n    ) external view returns (bytes4[] memory);\\n\\n    function getSigsImplementation(bytes4 sig_) external view returns (address);\\n\\n    function readFromStorage(\\n        bytes32 slot_\\n    ) external view returns (uint256 result_);\\n}\\n\\ninterface ILite {\\n    function setAdmin(address newAdmin) external;\\n\\n    function getAdmin() external view returns (address);\\n\\n    function removeImplementation(address implementation_) external;\\n\\n    function addImplementation(\\n        address implementation_,\\n        bytes4[] calldata sigs_\\n    ) external;\\n\\n    function setDummyImplementation(address newDummyImplementation_) external;\\n\\n    function updateMaxRiskRatio(\\n        uint8[] memory protocolId_,\\n        uint256[] memory newRiskRatio_\\n    ) external;\\n\\n    function updateAggrMaxVaultRatio(uint256 newAggrMaxVaultRatio_) external;\\n}\\n\\ninterface IDSAV2 {\\n    function cast(\\n        string[] memory _targetNames,\\n        bytes[] memory _datas,\\n        address _origin\\n    ) external payable returns (bytes32);\\n\\n    function isAuth(address user) external view returns (bool);\\n}\\n\\ninterface IFluidVaultT1Factory {\\n    function deployVault(\\n        address vaultDeploymentLogic_,\\n        bytes calldata vaultDeploymentData_\\n    ) external returns (address vault_);\\n\\n    function setVaultAuth(\\n        address vault_,\\n        address vaultAuth_,\\n        bool allowed_\\n    ) external;\\n\\n    function getVaultAddress(\\n        uint256 vaultId_\\n    ) external view returns (address vault_);\\n\\n    function readFromStorage(\\n        bytes32 slot_\\n    ) external view returns (uint256 result_);\\n}\\n\\ninterface IFluidReserveContract {\\n    function isRebalancer(address user) external returns (bool);\\n\\n    function rebalanceFToken(address protocol_) external;\\n\\n    function rebalanceVault(address protocol_) external;\\n\\n    function transferFunds(address token_) external;\\n\\n    function getProtocolTokens(address protocol_) external;\\n\\n    function updateAuth(address auth_, bool isAuth_) external;\\n\\n    function updateRebalancer(address rebalancer_, bool isRebalancer_) external;\\n\\n    function approve(\\n        address[] memory protocols_,\\n        address[] memory tokens_,\\n        uint256[] memory amounts_\\n    ) external;\\n\\n    function revoke(\\n        address[] memory protocols_,\\n        address[] memory tokens_\\n    ) external;\\n}\\n\\n\\ninterface IERC20 {\\n    function allowance(address spender, address caller) external view returns(uint256);\\n}\\n\\n\\n\\ncontract PayloadIGP34 {\\n    uint256 public constant PROPOSAL_ID = 34;\\n\\n    address public constant PROPOSER =\\n        0xA45f7bD6A5Ff45D31aaCE6bCD3d426D9328cea01;\\n\\n    address public constant PROPOSER_AVO_MULTISIG =\\n        0x059A94A72951c0ae1cc1CE3BF0dB52421bbE8210;\\n\\n    address public constant PROPOSER_AVO_MULTISIG_2 =\\n        0x9efdE135CA4832AbF0408c44c6f5f370eB0f35e8;\\n\\n    address public constant PROPOSER_AVO_MULTISIG_3 = \\n        0x5C43AAC965ff230AC1cF63e924D0153291D78BaD;\\n\\n    IGovernorBravo public constant GOVERNOR =\\n        IGovernorBravo(0x0204Cd037B2ec03605CFdFe482D8e257C765fA1B);\\n    ITimelock public immutable TIMELOCK =\\n        ITimelock(0x2386DC45AdDed673317eF068992F19421B481F4c);\\n\\n    IFluidVaultT1Factory public constant VAULT_T1_FACTORY =\\n        IFluidVaultT1Factory(0x324c5Dc1fC42c7a4D43d92df1eBA58a54d13Bf2d);\\n    IFluidReserveContract public constant FLUID_RESERVE =\\n        IFluidReserveContract(0x264786EF916af64a1DB19F513F24a3681734ce92);\\n\\n    IDSAV2 public constant TREASURY =\\n        IDSAV2(0x28849D2b63fA8D361e5fc15cB8aBB13019884d09);\\n\\n    address public immutable ADDRESS_THIS;\\n\\n    address public constant TEAM_MULTISIG =\\n        0x4F6F977aCDD1177DCD81aB83074855EcB9C2D49e;\\n\\n    ILite public constant LITE =\\n        ILite(0xA0D3707c569ff8C87FA923d3823eC5D81c98Be78);\\n\\n    address public constant wBTC_ADDRESS =\\n        0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;\\n\\n    address public constant stETH_ADDRESS =\\n        0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84;\\n\\n    constructor() {\\n        ADDRESS_THIS = address(this);\\n    }\\n\\n    function propose(string memory description) external {\\n        require(\\n            msg.sender == PROPOSER ||\\n                msg.sender == TEAM_MULTISIG ||\\n                address(this) == PROPOSER_AVO_MULTISIG ||\\n                address(this) == PROPOSER_AVO_MULTISIG_2 ||\\n                address(PROPOSER_AVO_MULTISIG_3) == PROPOSER_AVO_MULTISIG_3,\\n            \\\"msg.sender-not-allowed\\\"\\n        );\\n\\n        uint256 totalActions = 1;\\n        address[] memory targets = new address[](totalActions);\\n        uint256[] memory values = new uint256[](totalActions);\\n        string[] memory signatures = new string[](totalActions);\\n        bytes[] memory calldatas = new bytes[](totalActions);\\n\\n        // Action 1: call executePayload on timelock contract to execute payload related to Lite & Fluid\\n        targets[0] = address(TIMELOCK);\\n        values[0] = 0;\\n        signatures[0] = \\\"executePayload(address,string,bytes)\\\";\\n        calldatas[0] = abi.encode(ADDRESS_THIS, \\\"execute()\\\", abi.encode());\\n\\n        uint256 proposedId = GOVERNOR.propose(\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            description\\n        );\\n\\n        require(proposedId == PROPOSAL_ID, \\\"PROPOSAL_IS_NOT_SAME\\\");\\n    }\\n\\n    function execute() external {\\n        require(address(this) == address(TIMELOCK), \\\"not-valid-caller\\\");\\n\\n        // Action 1: Add new Claim Module and update Default Implementation on Lite\\n        action1();\\n\\n        // Action 2: Update v1.1.0 Vaults config\\n        action2();\\n\\n        //Action 3: Add WBTC vault reward vault on WBTC/USDC and WBTC/USDT\\n        action3();\\n\\n        // Action 4: Transfer WBTC and USDC from Treasury to Team Multisig\\n        action4();\\n    }\\n\\n    function verifyProposal() external view {}\\n\\n    /***********************************|\\n    |     Proposal Payload Actions      |\\n    |__________________________________*/\\n\\n    /// @notice Action 1: Add new Claim Module and update Default Implementation on Lite\\n    function action1() internal {\\n        // set dummy implementation\\n        LITE.setDummyImplementation(0x35E7961BE97ccba901Cf14b73202d58f7a33d46d);\\n\\n        // add Claim Module\\n\\n        bytes4[] memory sigs_ = new bytes4[](1);\\n        sigs_[0] =  bytes4(keccak256(\\\"claimFromSpark()\\\"));\\n        LITE.addImplementation(0xc10A855055Eb3939FCaA512253Ec3f671C4Ab839, sigs_);\\n        \\n        address(LITE).call(abi.encode(sigs_[0]));\\n    }\\n\\n    /// @notice Action 2: Update v1.1.0 Vaults config\\n    function action2() internal {\\n        VaultConfig[] memory configs_ = new VaultConfig[](10);\\n\\n        uint256 i;\\n\\n        // ETH_USDC\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 11,\\n                collateralFactor: 87 * 1e2,\\n                liquidationThreshold: 92 * 1e2,\\n                liquidationMaxLimit: 95 * 1e2,\\n                liquidationPenalty: 1 * 1e2\\n            });\\n        }\\n\\n        // ETH/USDT\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 12,\\n                collateralFactor: 87 * 1e2,\\n                liquidationThreshold: 92 * 1e2,\\n                liquidationMaxLimit: 95 * 1e2,\\n                liquidationPenalty: 2 * 1e2\\n            });\\n        }\\n\\n        // WSTETH/ETH\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 13,\\n                collateralFactor: 95 * 1e2,\\n                liquidationThreshold: 97 * 1e2,\\n                liquidationMaxLimit: 98 * 1e2,\\n                liquidationPenalty: 0.1 * 1e2\\n            });\\n        }\\n        \\n        // WSTETH/USDC\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 14,\\n                collateralFactor: 82 * 1e2,\\n                liquidationThreshold: 88 * 1e2,\\n                liquidationMaxLimit: 92.5 * 1e2,\\n                liquidationPenalty: 2.5 * 1e2\\n            });\\n        }\\n\\n        // WSTETH/USDT\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 15,\\n                collateralFactor: 82 * 1e2,\\n                liquidationThreshold: 88 * 1e2,\\n                liquidationMaxLimit: 92.5 * 1e2,\\n                liquidationPenalty: 3 * 1e2\\n            });\\n        }\\n\\n        // WEETH/WSTETH\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 16,\\n                collateralFactor: 94 * 1e2,\\n                liquidationThreshold: 96 * 1e2,\\n                liquidationMaxLimit: 97 * 1e2,\\n                liquidationPenalty: 1 * 1e2\\n            });\\n        }\\n\\n        // SUSDE/USDC\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 17,\\n                collateralFactor: 90 * 1e2,\\n                liquidationThreshold: 92 * 1e2,\\n                liquidationMaxLimit: 95 * 1e2,\\n                liquidationPenalty: 2 * 1e2\\n            });\\n        }\\n\\n        // SUSDE/USDT\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 18,\\n                collateralFactor: 90 * 1e2,\\n                liquidationThreshold: 92 * 1e2,\\n                liquidationMaxLimit: 95 * 1e2,\\n                liquidationPenalty: 2 * 1e2\\n            });\\n        }\\n\\n        // WEETH/USDC\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 19,\\n                collateralFactor: 77 * 1e2,\\n                liquidationThreshold: 82 * 1e2,\\n                liquidationMaxLimit: 90 * 1e2,\\n                liquidationPenalty: 3 * 1e2\\n            });\\n        }\\n\\n        // WEETH/USDT\\n        {\\n            configs_[i++] = VaultConfig({\\n                vaultId: 20,\\n                collateralFactor: 77 * 1e2,\\n                liquidationThreshold: 82 * 1e2,\\n                liquidationMaxLimit: 90 * 1e2,\\n                liquidationPenalty: 4 * 1e2\\n            });\\n        }\\n\\n        _updateVaultConfig(configs_);\\n    }\\n\\n    /// @notice Action 3: Add WBTC vault reward vault on WBTC/USDC and WBTC/USDT\\n    function action3() internal {\\n        address[] memory protocols = new address[](2);\\n        address[] memory tokens = new address[](2);\\n        uint256[] memory amounts = new uint256[](2);\\n\\n       \\n        // WBTC/USDC\\n        {   \\n            address VAULT_WBTC_USDC = 0x6F72895Cf6904489Bcd862c941c3D02a3eE4f03e;\\n            address VAULT_REWARD_CONFIG = 0x4605FC1E6A49D92D97179407E823023F06D5aA0e;\\n            VAULT_T1_FACTORY.setVaultAuth(\\n                VAULT_WBTC_USDC, // WBTC/USDC\\n                VAULT_REWARD_CONFIG,\\n                true\\n            );\\n\\n            uint256 allowance = IERC20(wBTC_ADDRESS).allowance(address(FLUID_RESERVE), VAULT_WBTC_USDC);\\n\\n            protocols[0] = VAULT_WBTC_USDC;\\n            tokens[0] = wBTC_ADDRESS;\\n            amounts[0] = allowance + (0.8 * 1e8);\\n\\n        }\\n\\n        // WBTC/USDT\\n        {   \\n            address VAULT_WBTC_USDT = 0x3A0b7c8840D74D39552EF53F586dD8c3d1234C40;\\n            address VAULT_REWARD_CONFIG = 0xbA379AfC2829CbF5DeA14B8bc135a820e144456D;\\n\\n            VAULT_T1_FACTORY.setVaultAuth(\\n                VAULT_WBTC_USDT, // WBTC/USDT\\n                VAULT_REWARD_CONFIG,\\n                true\\n            );\\n\\n            uint256 allowance = IERC20(wBTC_ADDRESS).allowance(address(FLUID_RESERVE), VAULT_WBTC_USDT);\\n\\n            protocols[1] = VAULT_WBTC_USDT;\\n            tokens[1] = wBTC_ADDRESS;\\n            amounts[1] = allowance + (0.8 * 1e8);\\n        }\\n\\n        FLUID_RESERVE.approve(protocols, tokens, amounts);\\n    }\\n\\n    /// @notice Action 4: Transfer WBTC and USDC from Treasury to Team Multisig\\n    function action4() internal {\\n        string[] memory targets = new string[](2);\\n        bytes[] memory encodedSpells = new bytes[](2);\\n\\n        string\\n            memory withdrawSignature = \\\"withdraw(address,uint256,address,uint256,uint256)\\\";\\n\\n        // Spell 1: Transfer wBTC\\n        {\\n            uint256 wBTC_AMOUNT = 1.15 * 1e8; // 1.15 wBTC\\n            targets[0] = \\\"BASIC-A\\\";\\n            encodedSpells[0] = abi.encodeWithSignature(\\n                withdrawSignature,\\n                wBTC_ADDRESS,\\n                wBTC_AMOUNT,\\n                TEAM_MULTISIG,\\n                0,\\n                0\\n            );\\n        }\\n\\n        // Spell 2: Transfer stETH\\n        {\\n            uint256 stETH_AMOUNT = 30 * 1e18; // 30 stETH\\n            targets[1] = \\\"BASIC-A\\\";\\n            encodedSpells[1] = abi.encodeWithSignature(\\n                withdrawSignature,\\n                stETH_ADDRESS,\\n                stETH_AMOUNT,\\n                TEAM_MULTISIG,\\n                0,\\n                0\\n            );\\n        }\\n\\n        IDSAV2(TREASURY).cast(targets, encodedSpells, address(this));\\n    }\\n\\n    /// Helpers ///\\n    struct VaultConfig {\\n        uint256 vaultId;\\n        uint256 collateralFactor;\\n        uint256 liquidationThreshold;\\n        uint256 liquidationMaxLimit;\\n        uint256 liquidationPenalty;\\n    }\\n\\n    function _updateVaultConfig(VaultConfig[] memory configs_) internal {\\n        for (uint i = 0; i < configs_.length; i++) {\\n            VaultConfig memory config_ = configs_[i];\\n\\n            IFluidVaultT1 vault_ = IFluidVaultT1(VAULT_T1_FACTORY.getVaultAddress(config_.vaultId));\\n            vault_.updateLiquidationMaxLimit(config_.liquidationMaxLimit);\\n            vault_.updateLiquidationThreshold(config_.liquidationThreshold);\\n            vault_.updateCollateralFactor(config_.collateralFactor);\\n            vault_.updateLiquidationPenalty(config_.liquidationPenalty);\\n        }\\n    }\\n}\\n\",\"versionPragma\":\">=0.7.0\"}}}","address":"0x2194C7997e50710ABd25C7e9f85D50722aCC16DA","bytecode":"0x60c0604052732386dc45added673317ef068992f19421b481f4c60805234801561002857600080fd5b503060a05260805160a051611c0c610067600039600081816102c0015261061d0152600081816101ff01528181610308015261055c0152611c0c6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637aadef8b116100a2578063b696649511610071578063b69664951461026a578063b788f3a114610285578063bffa7f0f146102a0578063cc025f7c146102bb578063d45f9d95146102e257600080fd5b80637aadef8b146101fa5780637e2f35fa146102215780638a1c73641461023c578063aa98df391461025757600080fd5b8063308baf33116100e9578063308baf331461019f578063588c77e6146101ba57806361461954146101d557806366760d7d146101dd5780636dc0ae22146101df57600080fd5b80630680f4171461011b5780630bc9136e1461015357806325ad7f4d146101695780632d2c556514610184575b600080fd5b61013673a0d3707c569ff8c87fa923d3823ec5d81c98be7881565b6040516001600160a01b0390911681526020015b60405180910390f35b61015b602281565b60405190815260200161014a565b610136739efde135ca4832abf0408c44c6f5f370eb0f35e881565b6101367328849d2b63fa8d361e5fc15cb8abb13019884d0981565b61013673ae7ab96520de3a18e5e111b5eaab095312d7fe8481565b610136735c43aac965ff230ac1cf63e924d0153291d78bad81565b6101dd6102fd565b005b610136730204cd037b2ec03605cfdfe482d8e257c765fa1b81565b6101367f000000000000000000000000000000000000000000000000000000000000000081565b61013673059a94a72951c0ae1cc1ce3bf0db52421bbe821081565b61013673324c5dc1fc42c7a4d43d92df1eba58a54d13bf2d81565b6101dd61026536600461175d565b61038f565b61013673264786ef916af64a1db19f513f24a3681734ce9281565b610136734f6f977acdd1177dcd81ab83074855ecb9c2d49e81565b61013673a45f7bd6a5ff45d31aace6bcd3d426d9328cea0181565b6101367f000000000000000000000000000000000000000000000000000000000000000081565b610136732260fac5e5542a773aa44fbcfedf7c193bc2c59981565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036d5760405162461bcd60e51b815260206004820152601060248201526f3737ba16bb30b634b216b1b0b63632b960811b60448201526064015b60405180910390fd5b610375610748565b61037d61097f565b610385610d61565b61038d6111ef565b565b3373a45f7bd6a5ff45d31aace6bcd3d426d9328cea0114806103c4575033734f6f977acdd1177dcd81ab83074855ecb9c2d49e145b806103e257503073059a94a72951c0ae1cc1ce3bf0db52421bbe8210145b80610400575030739efde135ca4832abf0408c44c6f5f370eb0f35e8145b80610409575060015b61044e5760405162461bcd60e51b81526020600482015260166024820152751b5cd9cb9cd95b99195c8b5b9bdd0b585b1b1bddd95960521b6044820152606401610364565b604080516001808252818301909252600090826020808301908036833701905050905060008267ffffffffffffffff81111561048c5761048c611747565b6040519080825280602002602001820160405280156104b5578160200160208202803683370190505b50905060008367ffffffffffffffff8111156104d3576104d3611747565b60405190808252806020026020018201604052801561050657816020015b60608152602001906001900390816104f15790505b50905060008467ffffffffffffffff81111561052457610524611747565b60405190808252806020026020018201604052801561055757816020015b60608152602001906001900390816105425790505b5090507f00000000000000000000000000000000000000000000000000000000000000008460008151811061058e5761058e61180e565b60200260200101906001600160a01b031690816001600160a01b0316815250506000836000815181106105c3576105c361180e565b602002602001018181525050604051806060016040528060248152602001611bb360249139826000815181106105fb576105fb61180e565b60209081029190910181019190915260408051600081529182018152610644917f0000000000000000000000000000000000000000000000000000000000000000918101611874565b604051602081830303815290604052816000815181106106665761066661180e565b6020908102919091010152604051636d4ab48d60e11b8152600090730204cd037b2ec03605cfdfe482d8e257c765fa1b9063da95691a906106b39088908890889088908e90600401611986565b6020604051808303816000875af11580156106d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f691906119f3565b90506022811461073f5760405162461bcd60e51b815260206004820152601460248201527350524f504f53414c5f49535f4e4f545f53414d4560601b6044820152606401610364565b50505050505050565b60405163c39aa07d60e01b81527335e7961be97ccba901cf14b73202d58f7a33d46d600482015273a0d3707c569ff8c87fa923d3823ec5d81c98be789063c39aa07d90602401600060405180830381600087803b1580156107a857600080fd5b505af11580156107bc573d6000803e3d6000fd5b5060009250600191506107cc9050565b6040519080825280602002602001820160405280156107f5578160200160208202803683370190505b5090507f3a9fb2894c229bf42ad0c0aac341b73181c0d91697a4b6eb9e87a2a21f04e9e78160008151811061082c5761082c61180e565b6001600160e01b0319909216602092830291909101909101526040516378600da160e11b815273a0d3707c569ff8c87fa923d3823ec5d81c98be789063f0c01b42906108929073c10a855055eb3939fcaa512253ec3f671c4ab839908590600401611a0c565b600060405180830381600087803b1580156108ac57600080fd5b505af11580156108c0573d6000803e3d6000fd5b5050505073a0d3707c569ff8c87fa923d3823ec5d81c98be786001600160a01b0316816000815181106108f5576108f561180e565b602002602001015160405160200161091d91906001600160e01b031991909116815260200190565b60408051601f198184030181529082905261093791611a6c565b6000604051808303816000865af19150503d8060008114610974576040519150601f19603f3d011682016040523d82523d6000602084013e610979565b606091505b50505050565b60408051600a8082526101608201909252600091816020015b6109ca6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161099857905050905060006040518060a00160405280600b81526020016121fc81526020016123f0815260200161251c81526020016064815250828280610a1c90611a9e565b935081518110610a2e57610a2e61180e565b60200260200101819052506040518060a00160405280600c81526020016121fc81526020016123f0815260200161251c815260200160c8815250828280610a7490611a9e565b935081518110610a8657610a8661180e565b60200260200101819052506040518060a00160405280600d815260200161251c81526020016125e481526020016126488152602001600a815250828280610acc90611a9e565b935081518110610ade57610ade61180e565b60200260200101819052506040518060a00160405280600e815260200161200881526020016122608152602001612422815260200160fa815250828280610b2490611a9e565b935081518110610b3657610b3661180e565b60200260200101819052506040518060a00160405280600f815260200161200881526020016122608152602001612422815260200161012c815250828280610b7d90611a9e565b935081518110610b8f57610b8f61180e565b60200260200101819052506040518060a00160405280601081526020016124b8815260200161258081526020016125e481526020016064815250828280610bd590611a9e565b935081518110610be757610be761180e565b60200260200101819052506040518060a001604052806011815260200161232881526020016123f0815260200161251c815260200160c8815250828280610c2d90611a9e565b935081518110610c3f57610c3f61180e565b60200260200101819052506040518060a001604052806012815260200161232881526020016123f0815260200161251c815260200160c8815250828280610c8590611a9e565b935081518110610c9757610c9761180e565b60200260200101819052506040518060a0016040528060138152602001611e1481526020016120088152602001612328815260200161012c815250828280610cde90611a9e565b935081518110610cf057610cf061180e565b60200260200101819052506040518060a0016040528060148152602001611e14815260200161200881526020016123288152602001610190815250828280610d3790611a9e565b935081518110610d4957610d4961180e565b6020026020010181905250610d5d826114e8565b5050565b60408051600280825260608201835260009260208301908036833750506040805160028082526060820183529394506000939092509060208301908036833750506040805160028082526060820183529394506000939092509060208301908036833701905050604051637faa1d2160e01b8152736f72895cf6904489bcd862c941c3d02a3ee4f03e60048201819052734605fc1e6a49d92d97179407e823023f06d5aa0e6024830181905260016044840152929350919073324c5dc1fc42c7a4d43d92df1eba58a54d13bf2d90637faa1d2190606401600060405180830381600087803b158015610e5257600080fd5b505af1158015610e66573d6000803e3d6000fd5b5050604051636eb1769f60e11b815273264786ef916af64a1db19f513f24a3681734ce9260048201526001600160a01b038516602482015260009250732260fac5e5542a773aa44fbcfedf7c193bc2c599915063dd62ed3e90604401602060405180830381865afa158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0391906119f3565b90508286600081518110610f1957610f1961180e565b60200260200101906001600160a01b031690816001600160a01b031681525050732260fac5e5542a773aa44fbcfedf7c193bc2c59985600081518110610f6157610f6161180e565b6001600160a01b0390921660209283029190910190910152610f87816304c4b400611ab7565b84600081518110610f9a57610f9a61180e565b60209081029190910101525050604051637faa1d2160e01b8152733a0b7c8840d74d39552ef53f586dd8c3d1234c406004820181905273ba379afc2829cbf5dea14b8bc135a820e144456d60248301819052600160448401529092509073324c5dc1fc42c7a4d43d92df1eba58a54d13bf2d90637faa1d2190606401600060405180830381600087803b15801561103057600080fd5b505af1158015611044573d6000803e3d6000fd5b5050604051636eb1769f60e11b815273264786ef916af64a1db19f513f24a3681734ce9260048201526001600160a01b038516602482015260009250732260fac5e5542a773aa44fbcfedf7c193bc2c599915063dd62ed3e90604401602060405180830381865afa1580156110bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e191906119f3565b905082866001815181106110f7576110f761180e565b60200260200101906001600160a01b031690816001600160a01b031681525050732260fac5e5542a773aa44fbcfedf7c193bc2c5998560018151811061113f5761113f61180e565b6001600160a01b0390921660209283029190910190910152611165816304c4b400611ab7565b846001815181106111785761117861180e565b602090810291909101015250506040516303e8046160e01b815273264786ef916af64a1db19f513f24a3681734ce9291506303e80461906111c190869086908690600401611ad0565b600060405180830381600087803b1580156111db57600080fd5b505af115801561073f573d6000803e3d6000fd5b60408051600280825260608201909252600091816020015b60608152602001906001900390816112075750506040805160028082526060820190925291925060009190602082015b60608152602001906001900390816112375790505090506000604051806060016040528060318152602001611b8260319139905060006306dac2c090506040518060400160405280600781526020016642415349432d4160c81b815250846000815181106112a7576112a761180e565b6020908102919091010152604051732260fac5e5542a773aa44fbcfedf7c193bc2c599602482015260448101829052734f6f977acdd1177dcd81ab83074855ecb9c2d49e606482015260006084820181905260a4820152829060c40160408051601f19818403018152908290529161131e91611a6c565b60405180910390206001600160e01b0319166020820180516001600160e01b0383818316178352505050508360008151811061135c5761135c61180e565b60200260200101819052505060006801a055690d9db8000090506040518060400160405280600781526020016642415349432d4160c81b815250846001815181106113a9576113a961180e565b602090810291909101015260405173ae7ab96520de3a18e5e111b5eaab095312d7fe84602482015260448101829052734f6f977acdd1177dcd81ab83074855ecb9c2d49e606482015260006084820181905260a4820152829060c40160408051601f19818403018152908290529161142091611a6c565b60405180910390206001600160e01b0319166020820180516001600160e01b0383818316178352505050508360018151811061145e5761145e61180e565b6020908102919091010152506040516324c1324d60e21b81527328849d2b63fa8d361e5fc15cb8abb13019884d0990639304c934906114a590869086903090600401611b13565b6020604051808303816000875af11580156114c4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097991906119f3565b60005b8151811015610d5d5760008282815181106115085761150861180e565b60200260200101519050600073324c5dc1fc42c7a4d43d92df1eba58a54d13bf2d6001600160a01b031663e6bd26a283600001516040518263ffffffff1660e01b815260040161155a91815260200190565b602060405180830381865afa158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b9190611b51565b6060830151604051631131d2c560e31b81529192506001600160a01b0383169163898e9628916115d19160040190815260200190565b600060405180830381600087803b1580156115eb57600080fd5b505af11580156115ff573d6000803e3d6000fd5b50505060408084015190516369dadf0d60e11b81526001600160a01b038416925063d3b5be1a916116369160040190815260200190565b600060405180830381600087803b15801561165057600080fd5b505af1158015611664573d6000803e3d6000fd5b5050506020830151604051631427086960e21b81526001600160a01b038416925063509c21a49161169b9160040190815260200190565b600060405180830381600087803b1580156116b557600080fd5b505af11580156116c9573d6000803e3d6000fd5b50505060808301516040516357917a1160e01b81526001600160a01b03841692506357917a11916117009160040190815260200190565b600060405180830381600087803b15801561171a57600080fd5b505af115801561172e573d6000803e3d6000fd5b505050505050808061173f90611a9e565b9150506114eb565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561176f57600080fd5b813567ffffffffffffffff8082111561178757600080fd5b818401915084601f83011261179b57600080fd5b8135818111156117ad576117ad611747565b604051601f8201601f19908116603f011681019083821181831017156117d5576117d5611747565b816040528281528760208487010111156117ee57600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052603260045260246000fd5b60005b8381101561183f578181015183820152602001611827565b50506000910152565b60008151808452611860816020860160208601611824565b601f01601f19169290920160200192915050565b60018060a01b038316815260606020820152600960608201526865786563757465282960b81b608082015260a0604082015260006118b560a0830184611848565b949350505050565b600081518084526020808501945080840160005b838110156118f65781516001600160a01b0316875295820195908201906001016118d1565b509495945050505050565b600081518084526020808501945080840160005b838110156118f657815187529582019590820190600101611915565b600081518084526020808501808196508360051b8101915082860160005b85811015611979578284038952611967848351611848565b9885019893509084019060010161194f565b5091979650505050505050565b60a08152600061199960a08301886118bd565b82810360208401526119ab8188611901565b905082810360408401526119bf8187611931565b905082810360608401526119d38186611931565b905082810360808401526119e78185611848565b98975050505050505050565b600060208284031215611a0557600080fd5b5051919050565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b81811015611a5f5784516001600160e01b03191683529383019391830191600101611a39565b5090979650505050505050565b60008251611a7e818460208701611824565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600060018201611ab057611ab0611a88565b5060010190565b80820180821115611aca57611aca611a88565b92915050565b606081526000611ae360608301866118bd565b8281036020840152611af581866118bd565b90508281036040840152611b098185611901565b9695505050505050565b606081526000611b266060830186611931565b8281036020840152611b388186611931565b91505060018060a01b0383166040830152949350505050565b600060208284031215611b6357600080fd5b81516001600160a01b0381168114611b7a57600080fd5b939250505056fe776974686472617728616464726573732c75696e743235362c616464726573732c75696e743235362c75696e7432353629657865637574655061796c6f616428616464726573732c737472696e672c627974657329a2646970667358221220ab1a1950b10f1745a90d2cce1262be155ab5171ed70b46e0e4e563670ecae17c64736f6c63430008150033","deployedBytecode":"","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ADDRESS_THIS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLUID_RESERVE","outputs":[{"internalType":"contract IFluidReserveContract","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERNOR","outputs":[{"internalType":"contract IGovernorBravo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LITE","outputs":[{"internalType":"contract ILite","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSAL_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG_2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROPOSER_AVO_MULTISIG_3","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TEAM_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TIMELOCK","outputs":[{"internalType":"contract ITimelock","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY","outputs":[{"internalType":"contract IDSAV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VAULT_T1_FACTORY","outputs":[{"internalType":"contract IFluidVaultT1Factory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyProposal","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wBTC_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]}